

================================================================
== Vitis HLS Report for 'process_L_column'
================================================================
* Date:           Fri Oct 17 17:43:56 2025

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        LU_inversion
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.256 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- VITIS_LOOP_66_1   |        ?|        ?|   34 ~ 54|          -|          -|      ?|        no|
        | + VITIS_LOOP_69_2  |       10|       30|        10|          -|          -|  1 ~ 3|        no|
        +--------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 34
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 13 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 3 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.53>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%i_1 = alloca i32 1" [LU.cpp:66]   --->   Operation 35 'alloca' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%k_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %k"   --->   Operation 36 'read' 'k_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%p_read_10 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read11"   --->   Operation 37 'read' 'p_read_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%p_read_11 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read10"   --->   Operation 38 'read' 'p_read_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%p_read_12 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read9"   --->   Operation 39 'read' 'p_read_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%p_read_13 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read8"   --->   Operation 40 'read' 'p_read_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%p_read_14 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read7"   --->   Operation 41 'read' 'p_read_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%p_read_15 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read6"   --->   Operation 42 'read' 'p_read_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%p_read_16 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read5"   --->   Operation 43 'read' 'p_read_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%p_read416 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read4"   --->   Operation 44 'read' 'p_read416' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%p_read315 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read3"   --->   Operation 45 'read' 'p_read315' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%p_read214 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read2"   --->   Operation 46 'read' 'p_read214' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%p_read113 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read1"   --->   Operation 47 'read' 'p_read113' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%p_read12 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read"   --->   Operation 48 'read' 'p_read12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%k_cast = zext i2 %k_read"   --->   Operation 49 'zext' 'k_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (1.56ns)   --->   "%i = add i3 %k_cast, i3 1" [LU.cpp:66]   --->   Operation 50 'add' 'i' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (1.82ns)   --->   "%tmp_9 = mux i32 @_ssdm_op_Mux.ap_auto.4float.i2, i32 <undef>, i32 %p_read113, i32 %p_read214, i32 %p_read315, i2 %k_read"   --->   Operation 51 'mux' 'tmp_9' <Predicate = true> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (1.82ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.4float.i2, i32 <undef>, i32 %p_read_16, i32 %p_read_15, i32 %p_read_14, i2 %k_read"   --->   Operation 52 'mux' 'tmp_s' <Predicate = true> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (1.82ns)   --->   "%tmp_1 = mux i32 @_ssdm_op_Mux.ap_auto.4float.i2, i32 <undef>, i32 %p_read_12, i32 %p_read_11, i32 %p_read_10, i2 %k_read"   --->   Operation 53 'mux' 'tmp_1' <Predicate = true> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (1.70ns)   --->   "%tmp = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.3float.float.i2, i2 1, i32 %tmp_9, i2 2, i32 %tmp_s, i2 3, i32 %tmp_1, i32 <undef>, i2 %k_read"   --->   Operation 54 'sparsemux' 'tmp' <Predicate = true> <Delay = 1.70> <CoreInst = "SparseMux">   --->   Core 135 'SparseMux' <Latency = 0> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln66 = zext i3 %i" [LU.cpp:66]   --->   Operation 55 'zext' 'zext_ln66' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%L_0_read = read i32 @_ssdm_op_Read.ap_auto.floatP0A, i32 %L_0"   --->   Operation 56 'read' 'L_0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%L_01_read = read i32 @_ssdm_op_Read.ap_auto.floatP0A, i32 %L_01"   --->   Operation 57 'read' 'L_01_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%L_02_read = read i32 @_ssdm_op_Read.ap_auto.floatP0A, i32 %L_02"   --->   Operation 58 'read' 'L_02_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%L_03_read = read i32 @_ssdm_op_Read.ap_auto.floatP0A, i32 %L_03"   --->   Operation 59 'read' 'L_03_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (1.58ns)   --->   "%store_ln66 = store i33 %zext_ln66, i33 %i_1" [LU.cpp:66]   --->   Operation 60 'store' 'store_ln66' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%br_ln66 = br void %VITIS_LOOP_69_2" [LU.cpp:66]   --->   Operation 61 'br' 'br_ln66' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 4.37>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%i_2 = load i33 %i_1" [LU.cpp:66]   --->   Operation 62 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%trunc_ln66 = trunc i33 %i_2" [LU.cpp:66]   --->   Operation 63 'trunc' 'trunc_ln66' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%trunc_ln66_1 = trunc i33 %i_2" [LU.cpp:66]   --->   Operation 64 'trunc' 'trunc_ln66_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (2.55ns)   --->   "%icmp_ln66 = icmp_eq  i32 %trunc_ln66_1, i32 4" [LU.cpp:66]   --->   Operation 65 'icmp' 'icmp_ln66' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%br_ln66 = br i1 %icmp_ln66, void %VITIS_LOOP_69_2.split, void %for.end26.loopexit" [LU.cpp:66]   --->   Operation 66 'br' 'br_ln66' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_10 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i2.i2, i2 %trunc_ln66, i2 %k_read" [LU.cpp:73]   --->   Operation 67 'bitconcatenate' 'tmp_10' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln73 = zext i4 %tmp_10" [LU.cpp:73]   --->   Operation 68 'zext' 'zext_ln73' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%A_addr = getelementptr i32 %A, i64 0, i64 %zext_ln73" [LU.cpp:73]   --->   Operation 69 'getelementptr' 'A_addr' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%specpipeline_ln67 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_1" [LU.cpp:67]   --->   Operation 70 'specpipeline' 'specpipeline_ln67' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%specloopname_ln66 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8" [LU.cpp:66]   --->   Operation 71 'specloopname' 'specloopname_ln66' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (1.82ns)   --->   "%tmp_4 = mux i32 @_ssdm_op_Mux.ap_auto.4float.i2, i32 %L_0_read, i32 %L_01_read, i32 %L_02_read, i32 %L_03_read, i2 %trunc_ln66" [LU.cpp:66]   --->   Operation 72 'mux' 'tmp_4' <Predicate = (!icmp_ln66)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%L_1_read = read i32 @_ssdm_op_Read.ap_auto.floatP0A, i32 %L_1"   --->   Operation 73 'read' 'L_1_read' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%L_14_read = read i32 @_ssdm_op_Read.ap_auto.floatP0A, i32 %L_14"   --->   Operation 74 'read' 'L_14_read' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%L_15_read = read i32 @_ssdm_op_Read.ap_auto.floatP0A, i32 %L_15"   --->   Operation 75 'read' 'L_15_read' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%L_16_read = read i32 @_ssdm_op_Read.ap_auto.floatP0A, i32 %L_16"   --->   Operation 76 'read' 'L_16_read' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (1.82ns)   --->   "%tmp_5 = mux i32 @_ssdm_op_Mux.ap_auto.4float.i2, i32 %L_1_read, i32 %L_14_read, i32 %L_15_read, i32 %L_16_read, i2 %trunc_ln66" [LU.cpp:66]   --->   Operation 77 'mux' 'tmp_5' <Predicate = (!icmp_ln66)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%L_2_read = read i32 @_ssdm_op_Read.ap_auto.floatP0A, i32 %L_2"   --->   Operation 78 'read' 'L_2_read' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%L_27_read = read i32 @_ssdm_op_Read.ap_auto.floatP0A, i32 %L_27"   --->   Operation 79 'read' 'L_27_read' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%L_28_read = read i32 @_ssdm_op_Read.ap_auto.floatP0A, i32 %L_28"   --->   Operation 80 'read' 'L_28_read' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%L_29_read = read i32 @_ssdm_op_Read.ap_auto.floatP0A, i32 %L_29"   --->   Operation 81 'read' 'L_29_read' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (1.82ns)   --->   "%tmp_6 = mux i32 @_ssdm_op_Mux.ap_auto.4float.i2, i32 %L_2_read, i32 %L_27_read, i32 %L_28_read, i32 %L_29_read, i2 %trunc_ln66" [LU.cpp:66]   --->   Operation 82 'mux' 'tmp_6' <Predicate = (!icmp_ln66)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (1.56ns)   --->   "%icmp_ln69 = icmp_ne  i2 %k_read, i2 0" [LU.cpp:69]   --->   Operation 83 'icmp' 'icmp_ln69' <Predicate = (!icmp_ln66)> <Delay = 1.56> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 84 [1/1] (0.99ns)   --->   "%select_ln69 = select i1 %icmp_ln69, i2 %k_read, i2 1" [LU.cpp:69]   --->   Operation 84 'select' 'select_ln69' <Predicate = (!icmp_ln66)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 85 [1/1] (1.58ns)   --->   "%br_ln69 = br void %for.inc" [LU.cpp:69]   --->   Operation 85 'br' 'br_ln69' <Predicate = (!icmp_ln66)> <Delay = 1.58>
ST_2 : Operation 86 [1/1] (1.86ns)   --->   "%switch_ln75 = switch i2 %k_read, void %arrayidx3015.case.3, i2 2, void %branch10, i2 1, void %arrayidx3015.case.1" [LU.cpp:75]   --->   Operation 86 'switch' 'switch_ln75' <Predicate = (icmp_ln66)> <Delay = 1.86>
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "%write_ln75 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %L_14, i32 1" [LU.cpp:75]   --->   Operation 87 'write' 'write_ln75' <Predicate = (icmp_ln66 & k_read == 1)> <Delay = 0.00>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "%br_ln75 = br void %arrayidx3015.exit" [LU.cpp:75]   --->   Operation 88 'br' 'br_ln75' <Predicate = (icmp_ln66 & k_read == 1)> <Delay = 0.00>
ST_2 : Operation 89 [1/1] (0.00ns)   --->   "%write_ln75 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %L_28, i32 1" [LU.cpp:75]   --->   Operation 89 'write' 'write_ln75' <Predicate = (icmp_ln66 & k_read == 2)> <Delay = 0.00>
ST_2 : Operation 90 [1/1] (0.00ns)   --->   "%br_ln75 = br void %arrayidx3015.exit" [LU.cpp:75]   --->   Operation 90 'br' 'br_ln75' <Predicate = (icmp_ln66 & k_read == 2)> <Delay = 0.00>
ST_2 : Operation 91 [1/1] (0.00ns)   --->   "%write_ln75 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %L_312, i32 1" [LU.cpp:75]   --->   Operation 91 'write' 'write_ln75' <Predicate = (icmp_ln66 & k_read != 2 & k_read != 1)> <Delay = 0.00>
ST_2 : Operation 92 [1/1] (0.00ns)   --->   "%br_ln75 = br void %arrayidx3015.exit" [LU.cpp:75]   --->   Operation 92 'br' 'br_ln75' <Predicate = (icmp_ln66 & k_read != 2 & k_read != 1)> <Delay = 0.00>
ST_2 : Operation 93 [1/1] (0.00ns)   --->   "%ret_ln76 = ret" [LU.cpp:76]   --->   Operation 93 'ret' 'ret_ln76' <Predicate = (icmp_ln66)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.53>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%p = phi i2 %add_ln69, void %for.inc.split, i2 0, void %VITIS_LOOP_69_2.split" [LU.cpp:68]   --->   Operation 94 'phi' 'p' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%sum = phi i32 %sum_2, void %for.inc.split, i32 0, void %VITIS_LOOP_69_2.split"   --->   Operation 95 'phi' 'sum' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (1.56ns)   --->   "%icmp_ln69_1 = icmp_eq  i2 %p, i2 %select_ln69" [LU.cpp:69]   --->   Operation 96 'icmp' 'icmp_ln69_1' <Predicate = true> <Delay = 1.56> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 1, i64 3, i64 0"   --->   Operation 97 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (1.56ns)   --->   "%add_ln69 = add i2 %p, i2 1" [LU.cpp:69]   --->   Operation 98 'add' 'add_ln69' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 99 [1/1] (0.00ns)   --->   "%br_ln69 = br i1 %icmp_ln69_1, void %for.inc.split, void %for.inc24" [LU.cpp:69]   --->   Operation 99 'br' 'br_ln69' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 100 [1/1] (1.70ns)   --->   "%tmp_2 = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.3float.float.i2, i2 0, i32 %tmp_4, i2 1, i32 %tmp_5, i2 2, i32 %tmp_6, i32 <undef>, i2 %p" [LU.cpp:71]   --->   Operation 100 'sparsemux' 'tmp_2' <Predicate = (!icmp_ln69_1)> <Delay = 1.70> <CoreInst = "SparseMux">   --->   Core 135 'SparseMux' <Latency = 0> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 101 [1/1] (1.82ns)   --->   "%tmp_7 = mux i32 @_ssdm_op_Mux.ap_auto.4float.i2, i32 %p_read12, i32 %p_read113, i32 %p_read214, i32 <undef>, i2 %p" [LU.cpp:71]   --->   Operation 101 'mux' 'tmp_7' <Predicate = (!icmp_ln69_1 & k_read == 1)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 102 [1/1] (1.82ns)   --->   "%tmp_8 = mux i32 @_ssdm_op_Mux.ap_auto.4float.i2, i32 %p_read416, i32 %p_read_16, i32 %p_read_15, i32 <undef>, i2 %p" [LU.cpp:71]   --->   Operation 102 'mux' 'tmp_8' <Predicate = (!icmp_ln69_1 & k_read == 2)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 103 [1/1] (1.82ns)   --->   "%tmp_11 = mux i32 @_ssdm_op_Mux.ap_auto.4float.i2, i32 %p_read_13, i32 %p_read_12, i32 %p_read_11, i32 <undef>, i2 %p" [LU.cpp:71]   --->   Operation 103 'mux' 'tmp_11' <Predicate = (!icmp_ln69_1 & k_read == 3)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 104 [1/1] (1.70ns)   --->   "%tmp_3 = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.3float.float.i2, i2 1, i32 %tmp_7, i2 2, i32 %tmp_8, i2 3, i32 %tmp_11, i32 <undef>, i2 %k_read" [LU.cpp:71]   --->   Operation 104 'sparsemux' 'tmp_3' <Predicate = (!icmp_ln69_1)> <Delay = 1.70> <CoreInst = "SparseMux">   --->   Core 135 'SparseMux' <Latency = 0> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 105 [2/2] (2.32ns)   --->   "%A_load = load i4 %A_addr" [LU.cpp:73]   --->   Operation 105 'load' 'A_load' <Predicate = (icmp_ln69_1)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 4 <SV = 3> <Delay = 5.70>
ST_4 : Operation 106 [4/4] (5.70ns)   --->   "%mul = fmul i32 %tmp_2, i32 %tmp_3" [LU.cpp:71]   --->   Operation 106 'fmul' 'mul' <Predicate = true> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 5.70>
ST_5 : Operation 107 [3/4] (5.70ns)   --->   "%mul = fmul i32 %tmp_2, i32 %tmp_3" [LU.cpp:71]   --->   Operation 107 'fmul' 'mul' <Predicate = true> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 5.70>
ST_6 : Operation 108 [2/4] (5.70ns)   --->   "%mul = fmul i32 %tmp_2, i32 %tmp_3" [LU.cpp:71]   --->   Operation 108 'fmul' 'mul' <Predicate = true> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 5.70>
ST_7 : Operation 109 [1/4] (5.70ns)   --->   "%mul = fmul i32 %tmp_2, i32 %tmp_3" [LU.cpp:71]   --->   Operation 109 'fmul' 'mul' <Predicate = true> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.25>
ST_8 : Operation 110 [5/5] (7.25ns)   --->   "%sum_2 = fadd i32 %sum, i32 %mul" [LU.cpp:71]   --->   Operation 110 'fadd' 'sum_2' <Predicate = true> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 7.25>
ST_9 : Operation 111 [4/5] (7.25ns)   --->   "%sum_2 = fadd i32 %sum, i32 %mul" [LU.cpp:71]   --->   Operation 111 'fadd' 'sum_2' <Predicate = true> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 7.25>
ST_10 : Operation 112 [3/5] (7.25ns)   --->   "%sum_2 = fadd i32 %sum, i32 %mul" [LU.cpp:71]   --->   Operation 112 'fadd' 'sum_2' <Predicate = true> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 7.25>
ST_11 : Operation 113 [2/5] (7.25ns)   --->   "%sum_2 = fadd i32 %sum, i32 %mul" [LU.cpp:71]   --->   Operation 113 'fadd' 'sum_2' <Predicate = true> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 7.25>
ST_12 : Operation 114 [1/1] (0.00ns)   --->   "%specloopname_ln69 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [LU.cpp:69]   --->   Operation 114 'specloopname' 'specloopname_ln69' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 115 [1/5] (7.25ns)   --->   "%sum_2 = fadd i32 %sum, i32 %mul" [LU.cpp:71]   --->   Operation 115 'fadd' 'sum_2' <Predicate = true> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 116 [1/1] (0.00ns)   --->   "%br_ln69 = br void %for.inc" [LU.cpp:69]   --->   Operation 116 'br' 'br_ln69' <Predicate = true> <Delay = 0.00>

State 13 <SV = 3> <Delay = 2.32>
ST_13 : Operation 117 [1/2] (2.32ns)   --->   "%A_load = load i4 %A_addr" [LU.cpp:73]   --->   Operation 117 'load' 'A_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 14 <SV = 4> <Delay = 7.25>
ST_14 : Operation 118 [5/5] (7.25ns)   --->   "%sub = fsub i32 %A_load, i32 %sum" [LU.cpp:73]   --->   Operation 118 'fsub' 'sub' <Predicate = true> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 5> <Delay = 7.25>
ST_15 : Operation 119 [4/5] (7.25ns)   --->   "%sub = fsub i32 %A_load, i32 %sum" [LU.cpp:73]   --->   Operation 119 'fsub' 'sub' <Predicate = true> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 6> <Delay = 7.25>
ST_16 : Operation 120 [3/5] (7.25ns)   --->   "%sub = fsub i32 %A_load, i32 %sum" [LU.cpp:73]   --->   Operation 120 'fsub' 'sub' <Predicate = true> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 7> <Delay = 7.25>
ST_17 : Operation 121 [2/5] (7.25ns)   --->   "%sub = fsub i32 %A_load, i32 %sum" [LU.cpp:73]   --->   Operation 121 'fsub' 'sub' <Predicate = true> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 8> <Delay = 7.25>
ST_18 : Operation 122 [1/5] (7.25ns)   --->   "%sub = fsub i32 %A_load, i32 %sum" [LU.cpp:73]   --->   Operation 122 'fsub' 'sub' <Predicate = true> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 9> <Delay = 6.07>
ST_19 : Operation 123 [16/16] (6.07ns)   --->   "%div = fdiv i32 %sub, i32 %tmp" [LU.cpp:73]   --->   Operation 123 'fdiv' 'div' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 10> <Delay = 6.07>
ST_20 : Operation 124 [15/16] (6.07ns)   --->   "%div = fdiv i32 %sub, i32 %tmp" [LU.cpp:73]   --->   Operation 124 'fdiv' 'div' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 11> <Delay = 6.07>
ST_21 : Operation 125 [14/16] (6.07ns)   --->   "%div = fdiv i32 %sub, i32 %tmp" [LU.cpp:73]   --->   Operation 125 'fdiv' 'div' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 12> <Delay = 6.07>
ST_22 : Operation 126 [13/16] (6.07ns)   --->   "%div = fdiv i32 %sub, i32 %tmp" [LU.cpp:73]   --->   Operation 126 'fdiv' 'div' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 13> <Delay = 6.07>
ST_23 : Operation 127 [12/16] (6.07ns)   --->   "%div = fdiv i32 %sub, i32 %tmp" [LU.cpp:73]   --->   Operation 127 'fdiv' 'div' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 14> <Delay = 6.07>
ST_24 : Operation 128 [11/16] (6.07ns)   --->   "%div = fdiv i32 %sub, i32 %tmp" [LU.cpp:73]   --->   Operation 128 'fdiv' 'div' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 15> <Delay = 6.07>
ST_25 : Operation 129 [10/16] (6.07ns)   --->   "%div = fdiv i32 %sub, i32 %tmp" [LU.cpp:73]   --->   Operation 129 'fdiv' 'div' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 16> <Delay = 6.07>
ST_26 : Operation 130 [9/16] (6.07ns)   --->   "%div = fdiv i32 %sub, i32 %tmp" [LU.cpp:73]   --->   Operation 130 'fdiv' 'div' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 17> <Delay = 6.07>
ST_27 : Operation 131 [8/16] (6.07ns)   --->   "%div = fdiv i32 %sub, i32 %tmp" [LU.cpp:73]   --->   Operation 131 'fdiv' 'div' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 18> <Delay = 6.07>
ST_28 : Operation 132 [7/16] (6.07ns)   --->   "%div = fdiv i32 %sub, i32 %tmp" [LU.cpp:73]   --->   Operation 132 'fdiv' 'div' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 19> <Delay = 6.07>
ST_29 : Operation 133 [6/16] (6.07ns)   --->   "%div = fdiv i32 %sub, i32 %tmp" [LU.cpp:73]   --->   Operation 133 'fdiv' 'div' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 20> <Delay = 6.07>
ST_30 : Operation 134 [5/16] (6.07ns)   --->   "%div = fdiv i32 %sub, i32 %tmp" [LU.cpp:73]   --->   Operation 134 'fdiv' 'div' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 21> <Delay = 6.07>
ST_31 : Operation 135 [4/16] (6.07ns)   --->   "%div = fdiv i32 %sub, i32 %tmp" [LU.cpp:73]   --->   Operation 135 'fdiv' 'div' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 22> <Delay = 6.07>
ST_32 : Operation 136 [3/16] (6.07ns)   --->   "%div = fdiv i32 %sub, i32 %tmp" [LU.cpp:73]   --->   Operation 136 'fdiv' 'div' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 23> <Delay = 6.07>
ST_33 : Operation 137 [2/16] (6.07ns)   --->   "%div = fdiv i32 %sub, i32 %tmp" [LU.cpp:73]   --->   Operation 137 'fdiv' 'div' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 24> <Delay = 6.07>
ST_34 : Operation 138 [1/16] (6.07ns)   --->   "%div = fdiv i32 %sub, i32 %tmp" [LU.cpp:73]   --->   Operation 138 'fdiv' 'div' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 139 [1/1] (1.86ns)   --->   "%switch_ln73 = switch i2 %k_read, void %arrayidx2349.case.3, i2 2, void %arrayidx2349.case.2, i2 1, void %arrayidx2349.case.1" [LU.cpp:73]   --->   Operation 139 'switch' 'switch_ln73' <Predicate = true> <Delay = 1.86>
ST_34 : Operation 140 [1/1] (1.86ns)   --->   "%switch_ln73 = switch i2 %trunc_ln66, void %branch7, i2 0, void %branch4, i2 1, void %branch5, i2 2, void %branch6" [LU.cpp:73]   --->   Operation 140 'switch' 'switch_ln73' <Predicate = (k_read == 1)> <Delay = 1.86>
ST_34 : Operation 141 [1/1] (0.00ns)   --->   "%write_ln73 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %L_15, i32 %div" [LU.cpp:73]   --->   Operation 141 'write' 'write_ln73' <Predicate = (k_read == 1 & trunc_ln66 == 2)> <Delay = 0.00>
ST_34 : Operation 142 [1/1] (0.00ns)   --->   "%br_ln73 = br void %arrayidx2349.case.143" [LU.cpp:73]   --->   Operation 142 'br' 'br_ln73' <Predicate = (k_read == 1 & trunc_ln66 == 2)> <Delay = 0.00>
ST_34 : Operation 143 [1/1] (0.00ns)   --->   "%write_ln73 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %L_14, i32 %div" [LU.cpp:73]   --->   Operation 143 'write' 'write_ln73' <Predicate = (k_read == 1 & trunc_ln66 == 1)> <Delay = 0.00>
ST_34 : Operation 144 [1/1] (0.00ns)   --->   "%br_ln73 = br void %arrayidx2349.case.143" [LU.cpp:73]   --->   Operation 144 'br' 'br_ln73' <Predicate = (k_read == 1 & trunc_ln66 == 1)> <Delay = 0.00>
ST_34 : Operation 145 [1/1] (0.00ns)   --->   "%write_ln73 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %L_1, i32 %div" [LU.cpp:73]   --->   Operation 145 'write' 'write_ln73' <Predicate = (k_read == 1 & trunc_ln66 == 0)> <Delay = 0.00>
ST_34 : Operation 146 [1/1] (0.00ns)   --->   "%br_ln73 = br void %arrayidx2349.case.143" [LU.cpp:73]   --->   Operation 146 'br' 'br_ln73' <Predicate = (k_read == 1 & trunc_ln66 == 0)> <Delay = 0.00>
ST_34 : Operation 147 [1/1] (0.00ns)   --->   "%write_ln73 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %L_16, i32 %div" [LU.cpp:73]   --->   Operation 147 'write' 'write_ln73' <Predicate = (k_read == 1 & trunc_ln66 == 3)> <Delay = 0.00>
ST_34 : Operation 148 [1/1] (0.00ns)   --->   "%br_ln73 = br void %arrayidx2349.case.143" [LU.cpp:73]   --->   Operation 148 'br' 'br_ln73' <Predicate = (k_read == 1 & trunc_ln66 == 3)> <Delay = 0.00>
ST_34 : Operation 149 [1/1] (0.00ns)   --->   "%br_ln73 = br void %arrayidx2349.exit" [LU.cpp:73]   --->   Operation 149 'br' 'br_ln73' <Predicate = (k_read == 1)> <Delay = 0.00>
ST_34 : Operation 150 [1/1] (1.86ns)   --->   "%switch_ln73 = switch i2 %trunc_ln66, void %branch15, i2 0, void %branch12, i2 1, void %branch13, i2 2, void %branch14" [LU.cpp:73]   --->   Operation 150 'switch' 'switch_ln73' <Predicate = (k_read == 2)> <Delay = 1.86>
ST_34 : Operation 151 [1/1] (0.00ns)   --->   "%write_ln73 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %L_28, i32 %div" [LU.cpp:73]   --->   Operation 151 'write' 'write_ln73' <Predicate = (k_read == 2 & trunc_ln66 == 2)> <Delay = 0.00>
ST_34 : Operation 152 [1/1] (0.00ns)   --->   "%br_ln73 = br void %arrayidx2349.case.255" [LU.cpp:73]   --->   Operation 152 'br' 'br_ln73' <Predicate = (k_read == 2 & trunc_ln66 == 2)> <Delay = 0.00>
ST_34 : Operation 153 [1/1] (0.00ns)   --->   "%write_ln73 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %L_27, i32 %div" [LU.cpp:73]   --->   Operation 153 'write' 'write_ln73' <Predicate = (k_read == 2 & trunc_ln66 == 1)> <Delay = 0.00>
ST_34 : Operation 154 [1/1] (0.00ns)   --->   "%br_ln73 = br void %arrayidx2349.case.255" [LU.cpp:73]   --->   Operation 154 'br' 'br_ln73' <Predicate = (k_read == 2 & trunc_ln66 == 1)> <Delay = 0.00>
ST_34 : Operation 155 [1/1] (0.00ns)   --->   "%write_ln73 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %L_2, i32 %div" [LU.cpp:73]   --->   Operation 155 'write' 'write_ln73' <Predicate = (k_read == 2 & trunc_ln66 == 0)> <Delay = 0.00>
ST_34 : Operation 156 [1/1] (0.00ns)   --->   "%br_ln73 = br void %arrayidx2349.case.255" [LU.cpp:73]   --->   Operation 156 'br' 'br_ln73' <Predicate = (k_read == 2 & trunc_ln66 == 0)> <Delay = 0.00>
ST_34 : Operation 157 [1/1] (0.00ns)   --->   "%write_ln73 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %L_29, i32 %div" [LU.cpp:73]   --->   Operation 157 'write' 'write_ln73' <Predicate = (k_read == 2 & trunc_ln66 == 3)> <Delay = 0.00>
ST_34 : Operation 158 [1/1] (0.00ns)   --->   "%br_ln73 = br void %arrayidx2349.case.255" [LU.cpp:73]   --->   Operation 158 'br' 'br_ln73' <Predicate = (k_read == 2 & trunc_ln66 == 3)> <Delay = 0.00>
ST_34 : Operation 159 [1/1] (0.00ns)   --->   "%br_ln73 = br void %arrayidx2349.exit" [LU.cpp:73]   --->   Operation 159 'br' 'br_ln73' <Predicate = (k_read == 2)> <Delay = 0.00>
ST_34 : Operation 160 [1/1] (1.86ns)   --->   "%switch_ln73 = switch i2 %trunc_ln66, void %branch19, i2 0, void %branch16, i2 1, void %branch17, i2 2, void %branch18" [LU.cpp:73]   --->   Operation 160 'switch' 'switch_ln73' <Predicate = (k_read != 2 & k_read != 1)> <Delay = 1.86>
ST_34 : Operation 161 [1/1] (0.00ns)   --->   "%write_ln73 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %L_311, i32 %div" [LU.cpp:73]   --->   Operation 161 'write' 'write_ln73' <Predicate = (k_read != 2 & k_read != 1 & trunc_ln66 == 2)> <Delay = 0.00>
ST_34 : Operation 162 [1/1] (0.00ns)   --->   "%br_ln73 = br void %arrayidx2349.case.366" [LU.cpp:73]   --->   Operation 162 'br' 'br_ln73' <Predicate = (k_read != 2 & k_read != 1 & trunc_ln66 == 2)> <Delay = 0.00>
ST_34 : Operation 163 [1/1] (0.00ns)   --->   "%write_ln73 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %L_310, i32 %div" [LU.cpp:73]   --->   Operation 163 'write' 'write_ln73' <Predicate = (k_read != 2 & k_read != 1 & trunc_ln66 == 1)> <Delay = 0.00>
ST_34 : Operation 164 [1/1] (0.00ns)   --->   "%br_ln73 = br void %arrayidx2349.case.366" [LU.cpp:73]   --->   Operation 164 'br' 'br_ln73' <Predicate = (k_read != 2 & k_read != 1 & trunc_ln66 == 1)> <Delay = 0.00>
ST_34 : Operation 165 [1/1] (0.00ns)   --->   "%write_ln73 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %L_3, i32 %div" [LU.cpp:73]   --->   Operation 165 'write' 'write_ln73' <Predicate = (k_read != 2 & k_read != 1 & trunc_ln66 == 0)> <Delay = 0.00>
ST_34 : Operation 166 [1/1] (0.00ns)   --->   "%br_ln73 = br void %arrayidx2349.case.366" [LU.cpp:73]   --->   Operation 166 'br' 'br_ln73' <Predicate = (k_read != 2 & k_read != 1 & trunc_ln66 == 0)> <Delay = 0.00>
ST_34 : Operation 167 [1/1] (0.00ns)   --->   "%write_ln73 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %L_312, i32 %div" [LU.cpp:73]   --->   Operation 167 'write' 'write_ln73' <Predicate = (k_read != 2 & k_read != 1 & trunc_ln66 == 3)> <Delay = 0.00>
ST_34 : Operation 168 [1/1] (0.00ns)   --->   "%br_ln73 = br void %arrayidx2349.case.366" [LU.cpp:73]   --->   Operation 168 'br' 'br_ln73' <Predicate = (k_read != 2 & k_read != 1 & trunc_ln66 == 3)> <Delay = 0.00>
ST_34 : Operation 169 [1/1] (0.00ns)   --->   "%br_ln73 = br void %arrayidx2349.exit" [LU.cpp:73]   --->   Operation 169 'br' 'br_ln73' <Predicate = (k_read != 2 & k_read != 1)> <Delay = 0.00>
ST_34 : Operation 170 [1/1] (2.59ns)   --->   "%add_ln66 = add i33 %i_2, i33 1" [LU.cpp:66]   --->   Operation 170 'add' 'add_ln66' <Predicate = true> <Delay = 2.59> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.59> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 171 [1/1] (1.58ns)   --->   "%store_ln66 = store i33 %add_ln66, i33 %i_1" [LU.cpp:66]   --->   Operation 171 'store' 'store_ln66' <Predicate = true> <Delay = 1.58>
ST_34 : Operation 172 [1/1] (0.00ns)   --->   "%br_ln66 = br void %VITIS_LOOP_69_2" [LU.cpp:66]   --->   Operation 172 'br' 'br_ln66' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.534ns
The critical path consists of the following:
	wire read operation ('k_read') on port 'k' [32]  (0.000 ns)
	'mux' operation 32 bit ('tmp_9') [47]  (1.827 ns)
	'sparsemux' operation 32 bit ('tmp') [50]  (1.707 ns)

 <State 2>: 4.379ns
The critical path consists of the following:
	'load' operation 33 bit ('i', LU.cpp:66) on local variable 'i', LU.cpp:66 [59]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln66', LU.cpp:66) [62]  (2.552 ns)
	wire read operation ('L_14_read') on port 'L_14' [72]  (0.000 ns)
	'mux' operation 32 bit ('tmp_5', LU.cpp:66) [75]  (1.827 ns)

 <State 3>: 3.534ns
The critical path consists of the following:
	'phi' operation 2 bit ('p', LU.cpp:68) with incoming values : ('add_ln69', LU.cpp:69) [85]  (0.000 ns)
	'mux' operation 32 bit ('tmp_8', LU.cpp:71) [95]  (1.827 ns)
	'sparsemux' operation 32 bit ('tmp_3', LU.cpp:71) [97]  (1.707 ns)

 <State 4>: 5.702ns
The critical path consists of the following:
	'fmul' operation 32 bit ('mul', LU.cpp:71) [98]  (5.702 ns)

 <State 5>: 5.702ns
The critical path consists of the following:
	'fmul' operation 32 bit ('mul', LU.cpp:71) [98]  (5.702 ns)

 <State 6>: 5.702ns
The critical path consists of the following:
	'fmul' operation 32 bit ('mul', LU.cpp:71) [98]  (5.702 ns)

 <State 7>: 5.702ns
The critical path consists of the following:
	'fmul' operation 32 bit ('mul', LU.cpp:71) [98]  (5.702 ns)

 <State 8>: 7.256ns
The critical path consists of the following:
	'fadd' operation 32 bit ('sum', LU.cpp:71) [99]  (7.256 ns)

 <State 9>: 7.256ns
The critical path consists of the following:
	'fadd' operation 32 bit ('sum', LU.cpp:71) [99]  (7.256 ns)

 <State 10>: 7.256ns
The critical path consists of the following:
	'fadd' operation 32 bit ('sum', LU.cpp:71) [99]  (7.256 ns)

 <State 11>: 7.256ns
The critical path consists of the following:
	'fadd' operation 32 bit ('sum', LU.cpp:71) [99]  (7.256 ns)

 <State 12>: 7.256ns
The critical path consists of the following:
	'fadd' operation 32 bit ('sum', LU.cpp:71) [99]  (7.256 ns)

 <State 13>: 2.322ns
The critical path consists of the following:
	'load' operation 32 bit ('A_load', LU.cpp:73) on array 'A' [102]  (2.322 ns)

 <State 14>: 7.256ns
The critical path consists of the following:
	'fsub' operation 32 bit ('sub', LU.cpp:73) [103]  (7.256 ns)

 <State 15>: 7.256ns
The critical path consists of the following:
	'fsub' operation 32 bit ('sub', LU.cpp:73) [103]  (7.256 ns)

 <State 16>: 7.256ns
The critical path consists of the following:
	'fsub' operation 32 bit ('sub', LU.cpp:73) [103]  (7.256 ns)

 <State 17>: 7.256ns
The critical path consists of the following:
	'fsub' operation 32 bit ('sub', LU.cpp:73) [103]  (7.256 ns)

 <State 18>: 7.256ns
The critical path consists of the following:
	'fsub' operation 32 bit ('sub', LU.cpp:73) [103]  (7.256 ns)

 <State 19>: 6.075ns
The critical path consists of the following:
	'fdiv' operation 32 bit ('div', LU.cpp:73) [104]  (6.075 ns)

 <State 20>: 6.075ns
The critical path consists of the following:
	'fdiv' operation 32 bit ('div', LU.cpp:73) [104]  (6.075 ns)

 <State 21>: 6.075ns
The critical path consists of the following:
	'fdiv' operation 32 bit ('div', LU.cpp:73) [104]  (6.075 ns)

 <State 22>: 6.075ns
The critical path consists of the following:
	'fdiv' operation 32 bit ('div', LU.cpp:73) [104]  (6.075 ns)

 <State 23>: 6.075ns
The critical path consists of the following:
	'fdiv' operation 32 bit ('div', LU.cpp:73) [104]  (6.075 ns)

 <State 24>: 6.075ns
The critical path consists of the following:
	'fdiv' operation 32 bit ('div', LU.cpp:73) [104]  (6.075 ns)

 <State 25>: 6.075ns
The critical path consists of the following:
	'fdiv' operation 32 bit ('div', LU.cpp:73) [104]  (6.075 ns)

 <State 26>: 6.075ns
The critical path consists of the following:
	'fdiv' operation 32 bit ('div', LU.cpp:73) [104]  (6.075 ns)

 <State 27>: 6.075ns
The critical path consists of the following:
	'fdiv' operation 32 bit ('div', LU.cpp:73) [104]  (6.075 ns)

 <State 28>: 6.075ns
The critical path consists of the following:
	'fdiv' operation 32 bit ('div', LU.cpp:73) [104]  (6.075 ns)

 <State 29>: 6.075ns
The critical path consists of the following:
	'fdiv' operation 32 bit ('div', LU.cpp:73) [104]  (6.075 ns)

 <State 30>: 6.075ns
The critical path consists of the following:
	'fdiv' operation 32 bit ('div', LU.cpp:73) [104]  (6.075 ns)

 <State 31>: 6.075ns
The critical path consists of the following:
	'fdiv' operation 32 bit ('div', LU.cpp:73) [104]  (6.075 ns)

 <State 32>: 6.075ns
The critical path consists of the following:
	'fdiv' operation 32 bit ('div', LU.cpp:73) [104]  (6.075 ns)

 <State 33>: 6.075ns
The critical path consists of the following:
	'fdiv' operation 32 bit ('div', LU.cpp:73) [104]  (6.075 ns)

 <State 34>: 6.075ns
The critical path consists of the following:
	'fdiv' operation 32 bit ('div', LU.cpp:73) [104]  (6.075 ns)
	wire write operation ('write_ln73', LU.cpp:73) on port 'L_16' (LU.cpp:73) [118]  (0.000 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
