-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    A_stream_empty_n : IN STD_LOGIC;
    A_stream_read : OUT STD_LOGIC;
    B_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_stream_empty_n : IN STD_LOGIC;
    B_stream_read : OUT STD_LOGIC;
    C_add_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_add_stream_full_n : IN STD_LOGIC;
    C_add_stream_write : OUT STD_LOGIC;
    C_sub_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_sub_stream_full_n : IN STD_LOGIC;
    C_sub_stream_write : OUT STD_LOGIC;
    C_mul_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_mul_stream_full_n : IN STD_LOGIC;
    C_mul_stream_write : OUT STD_LOGIC;
    size : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "top_top,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.510000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2353,HLS_SYN_LUT=3164,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (39 downto 0) := "0000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (39 downto 0) := "0000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (39 downto 0) := "0000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (39 downto 0) := "0000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (39 downto 0) := "0000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (39 downto 0) := "0000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (39 downto 0) := "0001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (39 downto 0) := "0010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (39 downto 0) := "0100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (39 downto 0) := "1000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal A_stream_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal B_stream_blk_n : STD_LOGIC;
    signal C_add_stream_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal icmp_ln420_1_reg_1306 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal icmp_ln46_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln420_1_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal tmp_1_reg_1345 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal icmp_ln46_1_fu_758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_792_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal tmp_3_reg_1389 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal icmp_ln46_2_fu_833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_867_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal tmp_4_reg_1433 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal icmp_ln370_reg_1203 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_3_fu_923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_957_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal C_sub_stream_blk_n : STD_LOGIC;
    signal C_mul_stream_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal matC_mul_m_matrix_Data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal localA_reg_976 : STD_LOGIC_VECTOR (31 downto 0);
    signal localB_reg_981 : STD_LOGIC_VECTOR (31 downto 0);
    signal localA_1_reg_986 : STD_LOGIC_VECTOR (31 downto 0);
    signal localB_1_reg_991 : STD_LOGIC_VECTOR (31 downto 0);
    signal localA_2_reg_996 : STD_LOGIC_VECTOR (31 downto 0);
    signal localB_2_reg_1001 : STD_LOGIC_VECTOR (31 downto 0);
    signal localA_3_reg_1006 : STD_LOGIC_VECTOR (31 downto 0);
    signal localB_3_reg_1011 : STD_LOGIC_VECTOR (31 downto 0);
    signal localA_4_reg_1016 : STD_LOGIC_VECTOR (31 downto 0);
    signal localB_4_reg_1021 : STD_LOGIC_VECTOR (31 downto 0);
    signal localA_5_reg_1026 : STD_LOGIC_VECTOR (31 downto 0);
    signal localB_5_reg_1031 : STD_LOGIC_VECTOR (31 downto 0);
    signal localA_6_reg_1036 : STD_LOGIC_VECTOR (31 downto 0);
    signal localB_6_reg_1041 : STD_LOGIC_VECTOR (31 downto 0);
    signal localA_7_reg_1046 : STD_LOGIC_VECTOR (31 downto 0);
    signal localB_7_reg_1051 : STD_LOGIC_VECTOR (31 downto 0);
    signal localA_8_reg_1056 : STD_LOGIC_VECTOR (31 downto 0);
    signal localB_8_reg_1061 : STD_LOGIC_VECTOR (31 downto 0);
    signal localA_9_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal localB_9_reg_1071 : STD_LOGIC_VECTOR (31 downto 0);
    signal localA_10_reg_1076 : STD_LOGIC_VECTOR (31 downto 0);
    signal localB_10_reg_1081 : STD_LOGIC_VECTOR (31 downto 0);
    signal localA_11_reg_1086 : STD_LOGIC_VECTOR (31 downto 0);
    signal localB_11_reg_1091 : STD_LOGIC_VECTOR (31 downto 0);
    signal localA_12_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal localB_12_reg_1101 : STD_LOGIC_VECTOR (31 downto 0);
    signal localA_13_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal localB_13_reg_1111 : STD_LOGIC_VECTOR (31 downto 0);
    signal localA_14_reg_1140 : STD_LOGIC_VECTOR (31 downto 0);
    signal localB_14_reg_1145 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_497_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal matC_sub_m_nElements_reg_1150 : STD_LOGIC_VECTOR (31 downto 0);
    signal localA_15_reg_1160 : STD_LOGIC_VECTOR (31 downto 0);
    signal localB_15_reg_1165 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln111_fu_510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_reg_1170 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal trunc_ln93_fu_515_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln93_reg_1174 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln370_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal empty_fu_540_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_reg_1207 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln370_fu_493_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln370_reg_1213 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln370_fu_556_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln370_reg_1221 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal select_ln370_fu_573_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln370_reg_1226 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln370_1_fu_587_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln370_1_reg_1231 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln370_1_fu_599_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln370_1_reg_1236 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln373_fu_604_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln373_reg_1242 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln377_fu_613_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln377_reg_1251 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal add_ln380_1_fu_633_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln380_1_reg_1256 : STD_LOGIC_VECTOR (3 downto 0);
    signal matA_m_matrix_Data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_m_matrix_Data_load_reg_1271 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal matB_m_matrix_Data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rhs_m_matrix_Data_load_reg_1276 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln381_reg_1281 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal elementResult_1_fu_675_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal j_8_fu_697_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal j_8_reg_1301 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln420_fu_736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln420_reg_1332 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_10_fu_763_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal j_10_reg_1340 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln420_2_fu_807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln420_2_reg_1371 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln421_fu_812_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln421_reg_1376 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_12_fu_838_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal j_12_reg_1384 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln420_4_fu_891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln420_4_reg_1415 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln421_fu_902_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln421_reg_1420 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_13_fu_928_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal j_13_reg_1428 : STD_LOGIC_VECTOR (30 downto 0);
    signal result_m_matrix_Data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal result_m_matrix_Data_ce0 : STD_LOGIC;
    signal result_m_matrix_Data_we0 : STD_LOGIC;
    signal result_m_matrix_Data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_m_matrix_Data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal matA_m_matrix_Data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal matA_m_matrix_Data_ce0 : STD_LOGIC;
    signal matA_m_matrix_Data_we0 : STD_LOGIC;
    signal matB_m_matrix_Data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal matB_m_matrix_Data_ce0 : STD_LOGIC;
    signal matB_m_matrix_Data_we0 : STD_LOGIC;
    signal matC_add_m_matrix_Data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal matC_add_m_matrix_Data_ce0 : STD_LOGIC;
    signal matC_add_m_matrix_Data_we0 : STD_LOGIC;
    signal matC_add_m_matrix_Data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal matC_add_m_matrix_Data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_m_matrix_Data_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal result_m_matrix_Data_3_ce0 : STD_LOGIC;
    signal result_m_matrix_Data_3_we0 : STD_LOGIC;
    signal result_m_matrix_Data_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_m_matrix_Data_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal matC_mul_m_matrix_Data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal matC_mul_m_matrix_Data_ce0 : STD_LOGIC;
    signal matC_mul_m_matrix_Data_we0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_ap_start : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_ap_done : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_ap_idle : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_ap_ready : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_matA_m_matrix_Data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_matA_m_matrix_Data_ce0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_matA_m_matrix_Data_we0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_matA_m_matrix_Data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_ap_start : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_ap_done : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_ap_idle : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_ap_ready : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_matB_m_matrix_Data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_matB_m_matrix_Data_ce0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_matB_m_matrix_Data_we0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_matB_m_matrix_Data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_ap_start : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_ap_done : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_ap_idle : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_ap_ready : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_matC_add_m_matrix_Data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_matC_add_m_matrix_Data_ce0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_matC_add_m_matrix_Data_we0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_matC_add_m_matrix_Data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_ap_start : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_ap_done : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_ap_idle : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_ap_ready : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_result_m_matrix_Data_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_result_m_matrix_Data_3_ce0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_result_m_matrix_Data_3_we0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_result_m_matrix_Data_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_start : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_done : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_idle : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_ready : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matA_m_matrix_Data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matA_m_matrix_Data_ce0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matB_m_matrix_Data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matB_m_matrix_Data_ce0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matC_add_m_matrix_Data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matC_add_m_matrix_Data_ce0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matC_add_m_matrix_Data_we0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matC_add_m_matrix_Data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_ap_start : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_ap_done : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_ap_idle : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_ap_ready : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_matA_m_matrix_Data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_matA_m_matrix_Data_ce0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_matB_m_matrix_Data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_matB_m_matrix_Data_ce0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_result_m_matrix_Data_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_result_m_matrix_Data_3_ce0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_result_m_matrix_Data_3_we0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_result_m_matrix_Data_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_start : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_done : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_idle : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_ready : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_result_m_matrix_Data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_result_m_matrix_Data_ce0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_result_m_matrix_Data_we0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_result_m_matrix_Data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_start : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_done : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_idle : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_ready : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_result_m_matrix_Data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_result_m_matrix_Data_ce0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_matC_mul_m_matrix_Data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_matC_mul_m_matrix_Data_ce0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_matC_mul_m_matrix_Data_we0 : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_matC_mul_m_matrix_Data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhsCol_reg_322 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln370_1_fu_551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal elementResult_reg_333 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_mul_reg_346 : STD_LOGIC_VECTOR (3 downto 0);
    signal ref_tmp16_0_reg_357 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state31 : BOOLEAN;
    signal ap_predicate_op188_write_state30 : BOOLEAN;
    signal ap_predicate_op189_write_state30 : BOOLEAN;
    signal ap_block_state30 : BOOLEAN;
    signal ref_tmp16_1_reg_369 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state34 : BOOLEAN;
    signal ap_predicate_op233_write_state33 : BOOLEAN;
    signal ap_predicate_op234_write_state33 : BOOLEAN;
    signal ap_block_state33 : BOOLEAN;
    signal ref_tmp16_2_reg_381 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state37 : BOOLEAN;
    signal ap_predicate_op271_write_state36 : BOOLEAN;
    signal ap_predicate_op272_write_state36 : BOOLEAN;
    signal ap_block_state36 : BOOLEAN;
    signal ap_phi_mux_ref_tmp16_3_phi_fu_397_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ref_tmp16_3_reg_393 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state40 : BOOLEAN;
    signal ap_predicate_op311_write_state39 : BOOLEAN;
    signal ap_predicate_op312_write_state39 : BOOLEAN;
    signal ap_block_state39 : BOOLEAN;
    signal grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state16_ignore_call55 : BOOLEAN;
    signal grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state16_ignore_call56 : BOOLEAN;
    signal grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state17_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_ap_start_reg : STD_LOGIC := '0';
    signal grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state22_on_subcall_done : BOOLEAN;
    signal grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal zext_ln380_fu_628_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln377_fu_608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln381_fu_643_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln384_fu_652_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln189_fu_720_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln189_1_fu_800_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln189_2_fu_875_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln189_3_fu_965_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhsCol_fu_116 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal add_ln373_fu_657_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhsRow_fu_120 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal indvar_flatten_fu_124 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal j_fu_128 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal j_1_fu_132 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal j_3_fu_136 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal j_5_fu_140 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state2 : BOOLEAN;
    signal ap_block_state3 : BOOLEAN;
    signal ap_block_state4 : BOOLEAN;
    signal ap_block_state5 : BOOLEAN;
    signal ap_block_state6 : BOOLEAN;
    signal ap_block_state7 : BOOLEAN;
    signal ap_block_state8 : BOOLEAN;
    signal ap_block_state9 : BOOLEAN;
    signal ap_block_state10 : BOOLEAN;
    signal ap_block_state11 : BOOLEAN;
    signal ap_block_state12 : BOOLEAN;
    signal ap_block_state13 : BOOLEAN;
    signal ap_block_state14 : BOOLEAN;
    signal ap_block_state15 : BOOLEAN;
    signal ap_block_state16 : BOOLEAN;
    signal mul_ln370_fu_493_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln370_fu_543_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln370_fu_493_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_497_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_497_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln370_fu_535_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_540_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln370_fu_543_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln373_fu_568_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln373_fu_568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln370_1_fu_581_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln370_1_fu_599_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln377_fu_608_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln377_fu_619_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln379_fu_623_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln380_fu_638_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln383_fu_648_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln46_fu_688_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln46_fu_692_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln420_1_fu_707_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln46_fu_703_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal linearIndex_fu_712_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_727_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_727_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln46_1_fu_754_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln46_1_fu_758_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln420_3_fu_769_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln420_3_fu_769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln421_fu_779_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln420_fu_774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln421_fu_779_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal linearIndex_1_fu_784_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln420_2_fu_807_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln421_fu_812_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln46_2_fu_829_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln46_2_fu_833_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln420_5_fu_844_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln420_5_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln420_1_fu_849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln421_1_fu_854_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal linearIndex_2_fu_859_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_882_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_882_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln421_1_fu_897_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln421_1_fu_897_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln421_fu_902_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln46_3_fu_919_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln46_3_fu_923_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln420_6_fu_934_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln420_6_fu_934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln420_2_fu_939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln421_2_fu_944_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal linearIndex_3_fu_949_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_block_state18_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component top_top_Pipeline_VITIS_LOOP_111_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        matC_sub_m_nElements : IN STD_LOGIC_VECTOR (31 downto 0);
        matA_m_matrix_Data_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        matA_m_matrix_Data_ce0 : OUT STD_LOGIC;
        matA_m_matrix_Data_we0 : OUT STD_LOGIC;
        matA_m_matrix_Data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        localA : IN STD_LOGIC_VECTOR (31 downto 0);
        localA_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        localA_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        localA_3 : IN STD_LOGIC_VECTOR (31 downto 0);
        localA_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        localA_5 : IN STD_LOGIC_VECTOR (31 downto 0);
        localA_6 : IN STD_LOGIC_VECTOR (31 downto 0);
        localA_7 : IN STD_LOGIC_VECTOR (31 downto 0);
        localA_8 : IN STD_LOGIC_VECTOR (31 downto 0);
        localA_9 : IN STD_LOGIC_VECTOR (31 downto 0);
        localA_10 : IN STD_LOGIC_VECTOR (31 downto 0);
        localA_11 : IN STD_LOGIC_VECTOR (31 downto 0);
        localA_12 : IN STD_LOGIC_VECTOR (31 downto 0);
        localA_13 : IN STD_LOGIC_VECTOR (31 downto 0);
        localA_14 : IN STD_LOGIC_VECTOR (31 downto 0);
        localA_15 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_top_Pipeline_VITIS_LOOP_111_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        matC_sub_m_nElements : IN STD_LOGIC_VECTOR (31 downto 0);
        matB_m_matrix_Data_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        matB_m_matrix_Data_ce0 : OUT STD_LOGIC;
        matB_m_matrix_Data_we0 : OUT STD_LOGIC;
        matB_m_matrix_Data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        localB : IN STD_LOGIC_VECTOR (31 downto 0);
        localB_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        localB_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        localB_3 : IN STD_LOGIC_VECTOR (31 downto 0);
        localB_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        localB_5 : IN STD_LOGIC_VECTOR (31 downto 0);
        localB_6 : IN STD_LOGIC_VECTOR (31 downto 0);
        localB_7 : IN STD_LOGIC_VECTOR (31 downto 0);
        localB_8 : IN STD_LOGIC_VECTOR (31 downto 0);
        localB_9 : IN STD_LOGIC_VECTOR (31 downto 0);
        localB_10 : IN STD_LOGIC_VECTOR (31 downto 0);
        localB_11 : IN STD_LOGIC_VECTOR (31 downto 0);
        localB_12 : IN STD_LOGIC_VECTOR (31 downto 0);
        localB_13 : IN STD_LOGIC_VECTOR (31 downto 0);
        localB_14 : IN STD_LOGIC_VECTOR (31 downto 0);
        localB_15 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_top_Pipeline_VITIS_LOOP_93_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        empty : IN STD_LOGIC_VECTOR (4 downto 0);
        matC_add_m_matrix_Data_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        matC_add_m_matrix_Data_ce0 : OUT STD_LOGIC;
        matC_add_m_matrix_Data_we0 : OUT STD_LOGIC;
        matC_add_m_matrix_Data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_top_Pipeline_VITIS_LOOP_93_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        empty : IN STD_LOGIC_VECTOR (4 downto 0);
        result_m_matrix_Data_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        result_m_matrix_Data_3_ce0 : OUT STD_LOGIC;
        result_m_matrix_Data_3_we0 : OUT STD_LOGIC;
        result_m_matrix_Data_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_top_Pipeline_VITIS_LOOP_233_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        empty : IN STD_LOGIC_VECTOR (4 downto 0);
        matA_m_matrix_Data_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        matA_m_matrix_Data_ce0 : OUT STD_LOGIC;
        matA_m_matrix_Data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        matB_m_matrix_Data_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        matB_m_matrix_Data_ce0 : OUT STD_LOGIC;
        matB_m_matrix_Data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        matC_add_m_matrix_Data_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        matC_add_m_matrix_Data_ce0 : OUT STD_LOGIC;
        matC_add_m_matrix_Data_we0 : OUT STD_LOGIC;
        matC_add_m_matrix_Data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_top_Pipeline_VITIS_LOOP_280_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        empty : IN STD_LOGIC_VECTOR (4 downto 0);
        matA_m_matrix_Data_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        matA_m_matrix_Data_ce0 : OUT STD_LOGIC;
        matA_m_matrix_Data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        matB_m_matrix_Data_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        matB_m_matrix_Data_ce0 : OUT STD_LOGIC;
        matB_m_matrix_Data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        result_m_matrix_Data_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        result_m_matrix_Data_3_ce0 : OUT STD_LOGIC;
        result_m_matrix_Data_3_we0 : OUT STD_LOGIC;
        result_m_matrix_Data_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_top_Pipeline_VITIS_LOOP_93_13 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        matC_sub_m_nElements : IN STD_LOGIC_VECTOR (31 downto 0);
        result_m_matrix_Data_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        result_m_matrix_Data_ce0 : OUT STD_LOGIC;
        result_m_matrix_Data_we0 : OUT STD_LOGIC;
        result_m_matrix_Data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_top_Pipeline_VITIS_LOOP_129_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        matC_sub_m_nElements : IN STD_LOGIC_VECTOR (31 downto 0);
        result_m_matrix_Data_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        result_m_matrix_Data_ce0 : OUT STD_LOGIC;
        result_m_matrix_Data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        matC_mul_m_matrix_Data_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        matC_mul_m_matrix_Data_ce0 : OUT STD_LOGIC;
        matC_mul_m_matrix_Data_we0 : OUT STD_LOGIC;
        matC_mul_m_matrix_Data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_mul_32ns_32ns_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component top_mul_32s_32s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_mul_4s_4s_4_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component top_result_m_matrix_Data_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    result_m_matrix_Data_U : component top_result_m_matrix_Data_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => result_m_matrix_Data_address0,
        ce0 => result_m_matrix_Data_ce0,
        we0 => result_m_matrix_Data_we0,
        d0 => result_m_matrix_Data_d0,
        q0 => result_m_matrix_Data_q0);

    matA_m_matrix_Data_U : component top_result_m_matrix_Data_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => matA_m_matrix_Data_address0,
        ce0 => matA_m_matrix_Data_ce0,
        we0 => matA_m_matrix_Data_we0,
        d0 => grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_matA_m_matrix_Data_d0,
        q0 => matA_m_matrix_Data_q0);

    matB_m_matrix_Data_U : component top_result_m_matrix_Data_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => matB_m_matrix_Data_address0,
        ce0 => matB_m_matrix_Data_ce0,
        we0 => matB_m_matrix_Data_we0,
        d0 => grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_matB_m_matrix_Data_d0,
        q0 => matB_m_matrix_Data_q0);

    matC_add_m_matrix_Data_U : component top_result_m_matrix_Data_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => matC_add_m_matrix_Data_address0,
        ce0 => matC_add_m_matrix_Data_ce0,
        we0 => matC_add_m_matrix_Data_we0,
        d0 => matC_add_m_matrix_Data_d0,
        q0 => matC_add_m_matrix_Data_q0);

    result_m_matrix_Data_3_U : component top_result_m_matrix_Data_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => result_m_matrix_Data_3_address0,
        ce0 => result_m_matrix_Data_3_ce0,
        we0 => result_m_matrix_Data_3_we0,
        d0 => result_m_matrix_Data_3_d0,
        q0 => result_m_matrix_Data_3_q0);

    matC_mul_m_matrix_Data_U : component top_result_m_matrix_Data_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => matC_mul_m_matrix_Data_address0,
        ce0 => matC_mul_m_matrix_Data_ce0,
        we0 => matC_mul_m_matrix_Data_we0,
        d0 => grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_matC_mul_m_matrix_Data_d0,
        q0 => matC_mul_m_matrix_Data_q0);

    grp_top_Pipeline_VITIS_LOOP_111_1_fu_406 : component top_top_Pipeline_VITIS_LOOP_111_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_ap_start,
        ap_done => grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_ap_done,
        ap_idle => grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_ap_idle,
        ap_ready => grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_ap_ready,
        matC_sub_m_nElements => matC_sub_m_nElements_reg_1150,
        matA_m_matrix_Data_address0 => grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_matA_m_matrix_Data_address0,
        matA_m_matrix_Data_ce0 => grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_matA_m_matrix_Data_ce0,
        matA_m_matrix_Data_we0 => grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_matA_m_matrix_Data_we0,
        matA_m_matrix_Data_d0 => grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_matA_m_matrix_Data_d0,
        localA => localA_reg_976,
        localA_1 => localA_1_reg_986,
        localA_2 => localA_2_reg_996,
        localA_3 => localA_3_reg_1006,
        localA_4 => localA_4_reg_1016,
        localA_5 => localA_5_reg_1026,
        localA_6 => localA_6_reg_1036,
        localA_7 => localA_7_reg_1046,
        localA_8 => localA_8_reg_1056,
        localA_9 => localA_9_reg_1066,
        localA_10 => localA_10_reg_1076,
        localA_11 => localA_11_reg_1086,
        localA_12 => localA_12_reg_1096,
        localA_13 => localA_13_reg_1106,
        localA_14 => localA_14_reg_1140,
        localA_15 => localA_15_reg_1160);

    grp_top_Pipeline_VITIS_LOOP_111_11_fu_429 : component top_top_Pipeline_VITIS_LOOP_111_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_ap_start,
        ap_done => grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_ap_done,
        ap_idle => grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_ap_idle,
        ap_ready => grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_ap_ready,
        matC_sub_m_nElements => matC_sub_m_nElements_reg_1150,
        matB_m_matrix_Data_address0 => grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_matB_m_matrix_Data_address0,
        matB_m_matrix_Data_ce0 => grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_matB_m_matrix_Data_ce0,
        matB_m_matrix_Data_we0 => grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_matB_m_matrix_Data_we0,
        matB_m_matrix_Data_d0 => grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_matB_m_matrix_Data_d0,
        localB => localB_reg_981,
        localB_1 => localB_1_reg_991,
        localB_2 => localB_2_reg_1001,
        localB_3 => localB_3_reg_1011,
        localB_4 => localB_4_reg_1021,
        localB_5 => localB_5_reg_1031,
        localB_6 => localB_6_reg_1041,
        localB_7 => localB_7_reg_1051,
        localB_8 => localB_8_reg_1061,
        localB_9 => localB_9_reg_1071,
        localB_10 => localB_10_reg_1081,
        localB_11 => localB_11_reg_1091,
        localB_12 => localB_12_reg_1101,
        localB_13 => localB_13_reg_1111,
        localB_14 => localB_14_reg_1145,
        localB_15 => localB_15_reg_1165);

    grp_top_Pipeline_VITIS_LOOP_93_1_fu_452 : component top_top_Pipeline_VITIS_LOOP_93_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_ap_start,
        ap_done => grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_ap_done,
        ap_idle => grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_ap_idle,
        ap_ready => grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_ap_ready,
        empty => trunc_ln93_reg_1174,
        matC_add_m_matrix_Data_address0 => grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_matC_add_m_matrix_Data_address0,
        matC_add_m_matrix_Data_ce0 => grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_matC_add_m_matrix_Data_ce0,
        matC_add_m_matrix_Data_we0 => grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_matC_add_m_matrix_Data_we0,
        matC_add_m_matrix_Data_d0 => grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_matC_add_m_matrix_Data_d0);

    grp_top_Pipeline_VITIS_LOOP_93_12_fu_458 : component top_top_Pipeline_VITIS_LOOP_93_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_ap_start,
        ap_done => grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_ap_done,
        ap_idle => grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_ap_idle,
        ap_ready => grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_ap_ready,
        empty => trunc_ln93_reg_1174,
        result_m_matrix_Data_3_address0 => grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_result_m_matrix_Data_3_address0,
        result_m_matrix_Data_3_ce0 => grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_result_m_matrix_Data_3_ce0,
        result_m_matrix_Data_3_we0 => grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_result_m_matrix_Data_3_we0,
        result_m_matrix_Data_3_d0 => grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_result_m_matrix_Data_3_d0);

    grp_top_Pipeline_VITIS_LOOP_233_1_fu_464 : component top_top_Pipeline_VITIS_LOOP_233_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_start,
        ap_done => grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_done,
        ap_idle => grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_idle,
        ap_ready => grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_ready,
        empty => trunc_ln93_reg_1174,
        matA_m_matrix_Data_address0 => grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matA_m_matrix_Data_address0,
        matA_m_matrix_Data_ce0 => grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matA_m_matrix_Data_ce0,
        matA_m_matrix_Data_q0 => matA_m_matrix_Data_q0,
        matB_m_matrix_Data_address0 => grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matB_m_matrix_Data_address0,
        matB_m_matrix_Data_ce0 => grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matB_m_matrix_Data_ce0,
        matB_m_matrix_Data_q0 => matB_m_matrix_Data_q0,
        matC_add_m_matrix_Data_address0 => grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matC_add_m_matrix_Data_address0,
        matC_add_m_matrix_Data_ce0 => grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matC_add_m_matrix_Data_ce0,
        matC_add_m_matrix_Data_we0 => grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matC_add_m_matrix_Data_we0,
        matC_add_m_matrix_Data_d0 => grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matC_add_m_matrix_Data_d0);

    grp_top_Pipeline_VITIS_LOOP_280_1_fu_472 : component top_top_Pipeline_VITIS_LOOP_280_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_ap_start,
        ap_done => grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_ap_done,
        ap_idle => grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_ap_idle,
        ap_ready => grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_ap_ready,
        empty => trunc_ln93_reg_1174,
        matA_m_matrix_Data_address0 => grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_matA_m_matrix_Data_address0,
        matA_m_matrix_Data_ce0 => grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_matA_m_matrix_Data_ce0,
        matA_m_matrix_Data_q0 => matA_m_matrix_Data_q0,
        matB_m_matrix_Data_address0 => grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_matB_m_matrix_Data_address0,
        matB_m_matrix_Data_ce0 => grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_matB_m_matrix_Data_ce0,
        matB_m_matrix_Data_q0 => matB_m_matrix_Data_q0,
        result_m_matrix_Data_3_address0 => grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_result_m_matrix_Data_3_address0,
        result_m_matrix_Data_3_ce0 => grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_result_m_matrix_Data_3_ce0,
        result_m_matrix_Data_3_we0 => grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_result_m_matrix_Data_3_we0,
        result_m_matrix_Data_3_d0 => grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_result_m_matrix_Data_3_d0);

    grp_top_Pipeline_VITIS_LOOP_93_13_fu_480 : component top_top_Pipeline_VITIS_LOOP_93_13
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_start,
        ap_done => grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_done,
        ap_idle => grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_idle,
        ap_ready => grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_ready,
        matC_sub_m_nElements => matC_sub_m_nElements_reg_1150,
        result_m_matrix_Data_address0 => grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_result_m_matrix_Data_address0,
        result_m_matrix_Data_ce0 => grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_result_m_matrix_Data_ce0,
        result_m_matrix_Data_we0 => grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_result_m_matrix_Data_we0,
        result_m_matrix_Data_d0 => grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_result_m_matrix_Data_d0);

    grp_top_Pipeline_VITIS_LOOP_129_1_fu_486 : component top_top_Pipeline_VITIS_LOOP_129_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_start,
        ap_done => grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_done,
        ap_idle => grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_idle,
        ap_ready => grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_ready,
        matC_sub_m_nElements => matC_sub_m_nElements_reg_1150,
        result_m_matrix_Data_address0 => grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_result_m_matrix_Data_address0,
        result_m_matrix_Data_ce0 => grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_result_m_matrix_Data_ce0,
        result_m_matrix_Data_q0 => result_m_matrix_Data_q0,
        matC_mul_m_matrix_Data_address0 => grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_matC_mul_m_matrix_Data_address0,
        matC_mul_m_matrix_Data_ce0 => grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_matC_mul_m_matrix_Data_ce0,
        matC_mul_m_matrix_Data_we0 => grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_matC_mul_m_matrix_Data_we0,
        matC_mul_m_matrix_Data_d0 => grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_matC_mul_m_matrix_Data_d0);

    mul_32ns_32ns_64_1_1_U57 : component top_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln370_fu_493_p0,
        din1 => mul_ln370_fu_493_p1,
        dout => mul_ln370_fu_493_p2);

    mul_32s_32s_32_1_1_U58 : component top_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_497_p0,
        din1 => grp_fu_497_p1,
        dout => grp_fu_497_p2);

    mul_4s_4s_4_1_1_U59 : component top_mul_4s_4s_4_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        dout_WIDTH => 4)
    port map (
        din0 => mul_ln370_1_fu_599_p0,
        din1 => empty_reg_1207,
        dout => mul_ln370_1_fu_599_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state16_ignore_call56) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                    grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_ap_ready = ap_const_logic_1)) then 
                    grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state16_ignore_call55) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                    grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_ap_ready = ap_const_logic_1)) then 
                    grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln370_1_fu_551_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                    grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_ready = ap_const_logic_1)) then 
                    grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                    grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_ready = ap_const_logic_1)) then 
                    grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                    grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_ap_ready = ap_const_logic_1)) then 
                    grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (icmp_ln111_fu_510_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                    grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_ap_ready = ap_const_logic_1)) then 
                    grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                    grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_ready = ap_const_logic_1)) then 
                    grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (icmp_ln111_fu_510_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                    grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_ap_ready = ap_const_logic_1)) then 
                    grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    elementResult_reg_333_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln370_1_fu_551_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                elementResult_reg_333 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                elementResult_reg_333 <= elementResult_1_fu_675_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                indvar_flatten_fu_124 <= ap_const_lv64_0;
            elsif (((icmp_ln377_fu_608_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                indvar_flatten_fu_124 <= add_ln370_reg_1221;
            end if; 
        end if;
    end process;

    j_1_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state30) and (ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln46_fu_692_p2 = ap_const_lv1_1))) then 
                j_1_fu_132 <= ap_const_lv31_0;
            elsif (((ap_const_boolean_0 = ap_block_state34) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                j_1_fu_132 <= j_10_reg_1340;
            end if; 
        end if;
    end process;

    j_3_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state33) and (icmp_ln46_1_fu_758_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
                j_3_fu_136 <= ap_const_lv31_0;
            elsif (((ap_const_boolean_0 = ap_block_state37) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                j_3_fu_136 <= j_12_reg_1384;
            end if; 
        end if;
    end process;

    j_5_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state36) and (icmp_ln46_2_fu_833_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                j_5_fu_140 <= ap_const_lv31_0;
            elsif (((ap_const_boolean_0 = ap_block_state40) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
                j_5_fu_140 <= j_13_reg_1428;
            end if; 
        end if;
    end process;

    j_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_done = ap_const_logic_1) and (icmp_ln370_reg_1203 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                j_fu_128 <= ap_const_lv31_0;
            elsif (((ap_const_boolean_0 = ap_block_state31) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                j_fu_128 <= j_8_reg_1301;
            end if; 
        end if;
    end process;

    lhsCol_reg_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln370_1_fu_551_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                lhsCol_reg_322 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                lhsCol_reg_322 <= add_ln377_reg_1251;
            end if; 
        end if;
    end process;

    lhsRow_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                lhsRow_fu_120 <= ap_const_lv31_0;
            elsif (((icmp_ln377_fu_608_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                lhsRow_fu_120 <= select_ln370_1_reg_1231;
            end if; 
        end if;
    end process;

    phi_mul_reg_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln370_1_fu_551_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                phi_mul_reg_346 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                phi_mul_reg_346 <= add_ln380_1_reg_1256;
            end if; 
        end if;
    end process;

    ref_tmp16_0_reg_357_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state30) and (ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln420_1_fu_707_p2 = ap_const_lv1_0) and (icmp_ln46_fu_692_p2 = ap_const_lv1_0))) then 
                ref_tmp16_0_reg_357 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_state31) and (ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln420_1_reg_1306 = ap_const_lv1_1))) then 
                ref_tmp16_0_reg_357 <= matC_mul_m_matrix_Data_q0;
            end if; 
        end if;
    end process;

    ref_tmp16_1_reg_369_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state33) and (tmp_1_fu_792_p3 = ap_const_lv1_1) and (icmp_ln46_1_fu_758_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
                ref_tmp16_1_reg_369 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_state34) and (tmp_1_reg_1345 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                ref_tmp16_1_reg_369 <= matC_mul_m_matrix_Data_q0;
            end if; 
        end if;
    end process;

    ref_tmp16_2_reg_381_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state36) and (tmp_3_fu_867_p3 = ap_const_lv1_1) and (icmp_ln46_2_fu_833_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                ref_tmp16_2_reg_381 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_state37) and (tmp_3_reg_1389 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                ref_tmp16_2_reg_381 <= matC_mul_m_matrix_Data_q0;
            end if; 
        end if;
    end process;

    ref_tmp16_3_reg_393_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state39) and (tmp_4_fu_957_p3 = ap_const_lv1_1) and (icmp_ln46_3_fu_923_p2 = ap_const_lv1_0) and (icmp_ln370_reg_1203 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state39))) then 
                ref_tmp16_3_reg_393 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_state40) and (tmp_4_reg_1433 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
                ref_tmp16_3_reg_393 <= matC_mul_m_matrix_Data_q0;
            end if; 
        end if;
    end process;

    rhsCol_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                rhsCol_fu_116 <= ap_const_lv32_0;
            elsif (((icmp_ln377_fu_608_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                rhsCol_fu_116 <= add_ln373_fu_657_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                add_ln370_reg_1221 <= add_ln370_fu_556_p2;
                mul_ln370_1_reg_1236 <= mul_ln370_1_fu_599_p2;
                select_ln370_1_reg_1231 <= select_ln370_1_fu_587_p3;
                select_ln370_reg_1226 <= select_ln370_fu_573_p3;
                trunc_ln373_reg_1242 <= trunc_ln373_fu_604_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                add_ln377_reg_1251 <= add_ln377_fu_613_p2;
                add_ln380_1_reg_1256 <= add_ln380_1_fu_633_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                empty_reg_1207 <= empty_fu_540_p1;
                icmp_ln370_reg_1203 <= icmp_ln370_fu_535_p2;
                mul_ln370_reg_1213 <= mul_ln370_fu_493_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                icmp_ln111_reg_1170 <= icmp_ln111_fu_510_p2;
                trunc_ln93_reg_1174 <= trunc_ln93_fu_515_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                icmp_ln420_1_reg_1306 <= icmp_ln420_1_fu_707_p2;
                icmp_ln420_reg_1332 <= icmp_ln420_fu_736_p2;
                j_8_reg_1301 <= j_8_fu_697_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                icmp_ln420_2_reg_1371 <= icmp_ln420_2_fu_807_p2;
                j_10_reg_1340 <= j_10_fu_763_p2;
                    shl_ln421_reg_1376(31 downto 1) <= shl_ln421_fu_812_p2(31 downto 1);
                tmp_1_reg_1345 <= linearIndex_1_fu_784_p3(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                icmp_ln420_4_reg_1415 <= icmp_ln420_4_fu_891_p2;
                j_12_reg_1384 <= j_12_fu_838_p2;
                sub_ln421_reg_1420 <= sub_ln421_fu_902_p2;
                tmp_3_reg_1389 <= linearIndex_2_fu_859_p3(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                j_13_reg_1428 <= j_13_fu_928_p2;
                tmp_4_reg_1433 <= linearIndex_3_fu_949_p3(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                lhs_m_matrix_Data_load_reg_1271 <= matA_m_matrix_Data_q0;
                rhs_m_matrix_Data_load_reg_1276 <= matB_m_matrix_Data_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                localA_10_reg_1076 <= A_stream_dout;
                localB_10_reg_1081 <= B_stream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                localA_11_reg_1086 <= A_stream_dout;
                localB_11_reg_1091 <= B_stream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                localA_12_reg_1096 <= A_stream_dout;
                localB_12_reg_1101 <= B_stream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                localA_13_reg_1106 <= A_stream_dout;
                localB_13_reg_1111 <= B_stream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                localA_14_reg_1140 <= A_stream_dout;
                localB_14_reg_1145 <= B_stream_dout;
                matC_sub_m_nElements_reg_1150 <= grp_fu_497_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                localA_15_reg_1160 <= A_stream_dout;
                localB_15_reg_1165 <= B_stream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                localA_1_reg_986 <= A_stream_dout;
                localB_1_reg_991 <= B_stream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                localA_2_reg_996 <= A_stream_dout;
                localB_2_reg_1001 <= B_stream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                localA_3_reg_1006 <= A_stream_dout;
                localB_3_reg_1011 <= B_stream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                localA_4_reg_1016 <= A_stream_dout;
                localB_4_reg_1021 <= B_stream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                localA_5_reg_1026 <= A_stream_dout;
                localB_5_reg_1031 <= B_stream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                localA_6_reg_1036 <= A_stream_dout;
                localB_6_reg_1041 <= B_stream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                localA_7_reg_1046 <= A_stream_dout;
                localB_7_reg_1051 <= B_stream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                localA_8_reg_1056 <= A_stream_dout;
                localB_8_reg_1061 <= B_stream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                localA_9_reg_1066 <= A_stream_dout;
                localB_9_reg_1071 <= B_stream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                localA_reg_976 <= A_stream_dout;
                localB_reg_981 <= B_stream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                mul_ln381_reg_1281 <= grp_fu_497_p2;
            end if;
        end if;
    end process;
    shl_ln421_reg_1376(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, C_mul_stream_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state31, ap_CS_fsm_state30, icmp_ln46_fu_692_p2, ap_CS_fsm_state34, ap_CS_fsm_state33, icmp_ln46_1_fu_758_p2, ap_CS_fsm_state37, ap_CS_fsm_state36, icmp_ln46_2_fu_833_p2, ap_CS_fsm_state40, ap_CS_fsm_state39, icmp_ln370_reg_1203, icmp_ln46_3_fu_923_p2, ap_CS_fsm_state32, ap_CS_fsm_state35, ap_CS_fsm_state38, icmp_ln111_fu_510_p2, ap_CS_fsm_state17, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_done, grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_done, grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_done, icmp_ln370_1_fu_551_p2, ap_block_state31, ap_block_state30, ap_block_state34, ap_block_state33, ap_block_state37, ap_block_state36, ap_block_state40, ap_block_state39, ap_block_state17_on_subcall_done, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state22, ap_block_state22_on_subcall_done, ap_CS_fsm_state29, icmp_ln377_fu_608_p2, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state5, ap_block_state6, ap_block_state7, ap_block_state8, ap_block_state9, ap_block_state10, ap_block_state11, ap_block_state12, ap_block_state13, ap_block_state14, ap_block_state15, ap_block_state16, ap_block_state18_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_boolean_0 = ap_block_state3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_boolean_0 = ap_block_state4) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_boolean_0 = ap_block_state5) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_boolean_0 = ap_block_state6) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_boolean_0 = ap_block_state7) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_boolean_0 = ap_block_state8) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_boolean_0 = ap_block_state9) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_boolean_0 = ap_block_state10) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_boolean_0 = ap_block_state11) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_boolean_0 = ap_block_state12) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_boolean_0 = ap_block_state13) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((ap_const_boolean_0 = ap_block_state14) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((ap_const_boolean_0 = ap_block_state15) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((ap_const_boolean_0 = ap_block_state16) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (icmp_ln111_fu_510_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                elsif (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (icmp_ln111_fu_510_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (((ap_const_boolean_0 = ap_block_state18_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if (((grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                if (((icmp_ln370_1_fu_551_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state25 => 
                if (((icmp_ln377_fu_608_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state29 => 
                if (((grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_done = ap_const_logic_1) and (icmp_ln370_reg_1203 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                elsif (((grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_done = ap_const_logic_1) and (icmp_ln370_reg_1203 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                if (((ap_const_boolean_0 = ap_block_state30) and (ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln46_fu_692_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                elsif (((ap_const_boolean_0 = ap_block_state30) and (ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln46_fu_692_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                if (((ap_const_boolean_0 = ap_block_state31) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                if (((ap_const_logic_1 = C_mul_stream_full_n) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                if (((ap_const_boolean_0 = ap_block_state33) and (icmp_ln46_1_fu_758_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                elsif (((ap_const_boolean_0 = ap_block_state33) and (icmp_ln46_1_fu_758_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state34 => 
                if (((ap_const_boolean_0 = ap_block_state34) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state35 => 
                if (((ap_const_logic_1 = C_mul_stream_full_n) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state36 => 
                if (((ap_const_boolean_0 = ap_block_state36) and (icmp_ln46_2_fu_833_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                elsif (((ap_const_boolean_0 = ap_block_state36) and (icmp_ln46_2_fu_833_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state37 => 
                if (((ap_const_boolean_0 = ap_block_state37) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state38 => 
                if (((ap_const_logic_1 = C_mul_stream_full_n) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state39 => 
                if (((ap_const_boolean_0 = ap_block_state39) and (ap_const_logic_1 = ap_CS_fsm_state39) and ((icmp_ln46_3_fu_923_p2 = ap_const_lv1_1) or (icmp_ln370_reg_1203 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_boolean_0 = ap_block_state39) and (icmp_ln46_3_fu_923_p2 = ap_const_lv1_0) and (icmp_ln370_reg_1203 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state39))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state40 => 
                if (((ap_const_boolean_0 = ap_block_state40) and (ap_const_logic_1 = ap_CS_fsm_state40))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    A_stream_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, A_stream_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            A_stream_blk_n <= A_stream_empty_n;
        else 
            A_stream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    A_stream_read_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state5, ap_block_state6, ap_block_state7, ap_block_state8, ap_block_state9, ap_block_state10, ap_block_state11, ap_block_state12, ap_block_state13, ap_block_state14, ap_block_state15, ap_block_state16)
    begin
        if ((((ap_const_boolean_0 = ap_block_state16) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((ap_const_boolean_0 = ap_block_state15) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((ap_const_boolean_0 = ap_block_state14) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((ap_const_boolean_0 = ap_block_state13) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_const_boolean_0 = ap_block_state12) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((ap_const_boolean_0 = ap_block_state11) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_const_boolean_0 = ap_block_state10) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_boolean_0 = ap_block_state9) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_boolean_0 = ap_block_state8) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((ap_const_boolean_0 = ap_block_state7) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_boolean_0 = ap_block_state6) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_const_boolean_0 = ap_block_state5) and (ap_const_logic_1 = 
    ap_CS_fsm_state5)) or ((ap_const_boolean_0 = ap_block_state4) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_boolean_0 = ap_block_state3) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_boolean_0 = ap_block_state2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            A_stream_read <= ap_const_logic_1;
        else 
            A_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    B_stream_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, B_stream_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            B_stream_blk_n <= B_stream_empty_n;
        else 
            B_stream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_stream_read_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state5, ap_block_state6, ap_block_state7, ap_block_state8, ap_block_state9, ap_block_state10, ap_block_state11, ap_block_state12, ap_block_state13, ap_block_state14, ap_block_state15, ap_block_state16)
    begin
        if ((((ap_const_boolean_0 = ap_block_state16) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((ap_const_boolean_0 = ap_block_state15) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((ap_const_boolean_0 = ap_block_state14) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((ap_const_boolean_0 = ap_block_state13) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_const_boolean_0 = ap_block_state12) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((ap_const_boolean_0 = ap_block_state11) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_const_boolean_0 = ap_block_state10) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_boolean_0 = ap_block_state9) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_boolean_0 = ap_block_state8) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((ap_const_boolean_0 = ap_block_state7) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_boolean_0 = ap_block_state6) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_const_boolean_0 = ap_block_state5) and (ap_const_logic_1 = 
    ap_CS_fsm_state5)) or ((ap_const_boolean_0 = ap_block_state4) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_boolean_0 = ap_block_state3) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_boolean_0 = ap_block_state2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            B_stream_read <= ap_const_logic_1;
        else 
            B_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    C_add_stream_blk_n_assign_proc : process(C_add_stream_full_n, ap_CS_fsm_state31, icmp_ln420_1_reg_1306, ap_CS_fsm_state30, icmp_ln46_fu_692_p2, icmp_ln420_1_fu_707_p2, ap_CS_fsm_state34, tmp_1_reg_1345, ap_CS_fsm_state33, icmp_ln46_1_fu_758_p2, tmp_1_fu_792_p3, ap_CS_fsm_state37, tmp_3_reg_1389, ap_CS_fsm_state36, icmp_ln46_2_fu_833_p2, tmp_3_fu_867_p3, ap_CS_fsm_state40, tmp_4_reg_1433, ap_CS_fsm_state39, icmp_ln370_reg_1203, icmp_ln46_3_fu_923_p2, tmp_4_fu_957_p3)
    begin
        if ((((tmp_4_fu_957_p3 = ap_const_lv1_1) and (icmp_ln46_3_fu_923_p2 = ap_const_lv1_0) and (icmp_ln370_reg_1203 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state39)) or ((tmp_4_reg_1433 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((tmp_3_fu_867_p3 = ap_const_lv1_1) and (icmp_ln46_2_fu_833_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((tmp_3_reg_1389 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37)) or ((tmp_1_fu_792_p3 = ap_const_lv1_1) and (icmp_ln46_1_fu_758_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((tmp_1_reg_1345 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln420_1_fu_707_p2 = ap_const_lv1_0) and (icmp_ln46_fu_692_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln420_1_reg_1306 = ap_const_lv1_1)))) then 
            C_add_stream_blk_n <= C_add_stream_full_n;
        else 
            C_add_stream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_add_stream_din_assign_proc : process(ap_CS_fsm_state31, icmp_ln420_1_reg_1306, ap_CS_fsm_state30, ap_CS_fsm_state34, tmp_1_reg_1345, ap_CS_fsm_state33, ap_CS_fsm_state37, tmp_3_reg_1389, ap_CS_fsm_state36, ap_CS_fsm_state40, tmp_4_reg_1433, ap_CS_fsm_state39, matC_add_m_matrix_Data_q0, ap_block_state31, ap_predicate_op188_write_state30, ap_block_state30, ap_block_state34, ap_predicate_op233_write_state33, ap_block_state33, ap_block_state37, ap_predicate_op271_write_state36, ap_block_state36, ap_block_state40, ap_predicate_op311_write_state39, ap_block_state39)
    begin
        if ((((ap_const_boolean_0 = ap_block_state40) and (tmp_4_reg_1433 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((ap_const_boolean_0 = ap_block_state37) and (tmp_3_reg_1389 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37)) or ((ap_const_boolean_0 = ap_block_state34) and (tmp_1_reg_1345 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((ap_const_boolean_0 = ap_block_state31) and (ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln420_1_reg_1306 = ap_const_lv1_1)))) then 
            C_add_stream_din <= matC_add_m_matrix_Data_q0;
        elsif ((((ap_predicate_op311_write_state39 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state39) and (ap_const_logic_1 = ap_CS_fsm_state39)) or ((ap_predicate_op271_write_state36 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state36) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_predicate_op233_write_state33 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state33) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((ap_predicate_op188_write_state30 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state30) and (ap_const_logic_1 = ap_CS_fsm_state30)))) then 
            C_add_stream_din <= ap_const_lv32_0;
        else 
            C_add_stream_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    C_add_stream_write_assign_proc : process(ap_CS_fsm_state31, icmp_ln420_1_reg_1306, ap_CS_fsm_state30, ap_CS_fsm_state34, tmp_1_reg_1345, ap_CS_fsm_state33, ap_CS_fsm_state37, tmp_3_reg_1389, ap_CS_fsm_state36, ap_CS_fsm_state40, tmp_4_reg_1433, ap_CS_fsm_state39, ap_block_state31, ap_predicate_op188_write_state30, ap_block_state30, ap_block_state34, ap_predicate_op233_write_state33, ap_block_state33, ap_block_state37, ap_predicate_op271_write_state36, ap_block_state36, ap_block_state40, ap_predicate_op311_write_state39, ap_block_state39)
    begin
        if ((((ap_predicate_op311_write_state39 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state39) and (ap_const_logic_1 = ap_CS_fsm_state39)) or ((ap_const_boolean_0 = ap_block_state40) and (tmp_4_reg_1433 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((ap_predicate_op271_write_state36 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state36) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_const_boolean_0 = ap_block_state37) and (tmp_3_reg_1389 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37)) or ((ap_predicate_op233_write_state33 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state33) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((ap_const_boolean_0 = ap_block_state34) and (tmp_1_reg_1345 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((ap_predicate_op188_write_state30 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state30) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((ap_const_boolean_0 = ap_block_state31) and (ap_const_logic_1 
    = ap_CS_fsm_state31) and (icmp_ln420_1_reg_1306 = ap_const_lv1_1)))) then 
            C_add_stream_write <= ap_const_logic_1;
        else 
            C_add_stream_write <= ap_const_logic_0;
        end if; 
    end process;


    C_mul_stream_blk_n_assign_proc : process(C_mul_stream_full_n, ap_CS_fsm_state40, ap_CS_fsm_state32, ap_CS_fsm_state35, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            C_mul_stream_blk_n <= C_mul_stream_full_n;
        else 
            C_mul_stream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_mul_stream_din_assign_proc : process(C_mul_stream_full_n, ap_CS_fsm_state40, ap_CS_fsm_state32, ap_CS_fsm_state35, ap_CS_fsm_state38, ref_tmp16_0_reg_357, ref_tmp16_1_reg_369, ref_tmp16_2_reg_381, ap_phi_mux_ref_tmp16_3_phi_fu_397_p4, ap_block_state40)
    begin
        if (((ap_const_boolean_0 = ap_block_state40) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            C_mul_stream_din <= ap_phi_mux_ref_tmp16_3_phi_fu_397_p4;
        elsif (((ap_const_logic_1 = C_mul_stream_full_n) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            C_mul_stream_din <= ref_tmp16_2_reg_381;
        elsif (((ap_const_logic_1 = C_mul_stream_full_n) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            C_mul_stream_din <= ref_tmp16_1_reg_369;
        elsif (((ap_const_logic_1 = C_mul_stream_full_n) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            C_mul_stream_din <= ref_tmp16_0_reg_357;
        else 
            C_mul_stream_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    C_mul_stream_write_assign_proc : process(C_mul_stream_full_n, ap_CS_fsm_state40, ap_CS_fsm_state32, ap_CS_fsm_state35, ap_CS_fsm_state38, ap_block_state40)
    begin
        if ((((ap_const_logic_1 = C_mul_stream_full_n) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((ap_const_logic_1 = C_mul_stream_full_n) and (ap_const_logic_1 = ap_CS_fsm_state35)) or ((ap_const_logic_1 = C_mul_stream_full_n) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((ap_const_boolean_0 = ap_block_state40) and (ap_const_logic_1 = ap_CS_fsm_state40)))) then 
            C_mul_stream_write <= ap_const_logic_1;
        else 
            C_mul_stream_write <= ap_const_logic_0;
        end if; 
    end process;


    C_sub_stream_blk_n_assign_proc : process(C_sub_stream_full_n, ap_CS_fsm_state31, icmp_ln420_1_reg_1306, ap_CS_fsm_state30, icmp_ln46_fu_692_p2, icmp_ln420_1_fu_707_p2, ap_CS_fsm_state34, tmp_1_reg_1345, ap_CS_fsm_state33, icmp_ln46_1_fu_758_p2, tmp_1_fu_792_p3, ap_CS_fsm_state37, tmp_3_reg_1389, ap_CS_fsm_state36, icmp_ln46_2_fu_833_p2, tmp_3_fu_867_p3, ap_CS_fsm_state40, tmp_4_reg_1433, ap_CS_fsm_state39, icmp_ln370_reg_1203, icmp_ln46_3_fu_923_p2, tmp_4_fu_957_p3)
    begin
        if ((((tmp_4_fu_957_p3 = ap_const_lv1_1) and (icmp_ln46_3_fu_923_p2 = ap_const_lv1_0) and (icmp_ln370_reg_1203 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state39)) or ((tmp_4_reg_1433 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((tmp_3_fu_867_p3 = ap_const_lv1_1) and (icmp_ln46_2_fu_833_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((tmp_3_reg_1389 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37)) or ((tmp_1_fu_792_p3 = ap_const_lv1_1) and (icmp_ln46_1_fu_758_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((tmp_1_reg_1345 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln420_1_fu_707_p2 = ap_const_lv1_0) and (icmp_ln46_fu_692_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln420_1_reg_1306 = ap_const_lv1_1)))) then 
            C_sub_stream_blk_n <= C_sub_stream_full_n;
        else 
            C_sub_stream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_sub_stream_din_assign_proc : process(ap_CS_fsm_state31, icmp_ln420_1_reg_1306, ap_CS_fsm_state30, ap_CS_fsm_state34, tmp_1_reg_1345, ap_CS_fsm_state33, ap_CS_fsm_state37, tmp_3_reg_1389, ap_CS_fsm_state36, ap_CS_fsm_state40, tmp_4_reg_1433, ap_CS_fsm_state39, result_m_matrix_Data_3_q0, ap_block_state31, ap_predicate_op189_write_state30, ap_block_state30, ap_block_state34, ap_predicate_op234_write_state33, ap_block_state33, ap_block_state37, ap_predicate_op272_write_state36, ap_block_state36, ap_block_state40, ap_predicate_op312_write_state39, ap_block_state39)
    begin
        if ((((ap_const_boolean_0 = ap_block_state40) and (tmp_4_reg_1433 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((ap_const_boolean_0 = ap_block_state37) and (tmp_3_reg_1389 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37)) or ((ap_const_boolean_0 = ap_block_state34) and (tmp_1_reg_1345 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((ap_const_boolean_0 = ap_block_state31) and (ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln420_1_reg_1306 = ap_const_lv1_1)))) then 
            C_sub_stream_din <= result_m_matrix_Data_3_q0;
        elsif ((((ap_predicate_op312_write_state39 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state39) and (ap_const_logic_1 = ap_CS_fsm_state39)) or ((ap_predicate_op272_write_state36 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state36) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_predicate_op234_write_state33 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state33) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((ap_predicate_op189_write_state30 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state30) and (ap_const_logic_1 = ap_CS_fsm_state30)))) then 
            C_sub_stream_din <= ap_const_lv32_0;
        else 
            C_sub_stream_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    C_sub_stream_write_assign_proc : process(ap_CS_fsm_state31, icmp_ln420_1_reg_1306, ap_CS_fsm_state30, ap_CS_fsm_state34, tmp_1_reg_1345, ap_CS_fsm_state33, ap_CS_fsm_state37, tmp_3_reg_1389, ap_CS_fsm_state36, ap_CS_fsm_state40, tmp_4_reg_1433, ap_CS_fsm_state39, ap_block_state31, ap_predicate_op189_write_state30, ap_block_state30, ap_block_state34, ap_predicate_op234_write_state33, ap_block_state33, ap_block_state37, ap_predicate_op272_write_state36, ap_block_state36, ap_block_state40, ap_predicate_op312_write_state39, ap_block_state39)
    begin
        if ((((ap_predicate_op312_write_state39 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state39) and (ap_const_logic_1 = ap_CS_fsm_state39)) or ((ap_const_boolean_0 = ap_block_state40) and (tmp_4_reg_1433 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((ap_predicate_op272_write_state36 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state36) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_const_boolean_0 = ap_block_state37) and (tmp_3_reg_1389 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37)) or ((ap_predicate_op234_write_state33 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state33) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((ap_const_boolean_0 = ap_block_state34) and (tmp_1_reg_1345 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((ap_predicate_op189_write_state30 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state30) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((ap_const_boolean_0 = ap_block_state31) and (ap_const_logic_1 
    = ap_CS_fsm_state31) and (icmp_ln420_1_reg_1306 = ap_const_lv1_1)))) then 
            C_sub_stream_write <= ap_const_logic_1;
        else 
            C_sub_stream_write <= ap_const_logic_0;
        end if; 
    end process;

    add_ln370_1_fu_581_p2 <= std_logic_vector(unsigned(lhsRow_fu_120) + unsigned(ap_const_lv31_1));
    add_ln370_fu_556_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_124) + unsigned(ap_const_lv64_1));
    add_ln373_fu_657_p2 <= std_logic_vector(unsigned(select_ln370_reg_1226) + unsigned(ap_const_lv32_1));
    add_ln377_fu_613_p2 <= std_logic_vector(unsigned(lhsCol_reg_322) + unsigned(ap_const_lv32_1));
    add_ln379_fu_623_p2 <= std_logic_vector(unsigned(trunc_ln377_fu_619_p1) + unsigned(mul_ln370_1_reg_1236));
    add_ln380_1_fu_633_p2 <= std_logic_vector(unsigned(phi_mul_reg_346) + unsigned(empty_reg_1207));
    add_ln380_fu_638_p2 <= std_logic_vector(unsigned(phi_mul_reg_346) + unsigned(trunc_ln373_reg_1242));
    add_ln383_fu_648_p2 <= std_logic_vector(unsigned(trunc_ln373_reg_1242) + unsigned(mul_ln370_1_reg_1236));
    add_ln421_1_fu_854_p2 <= std_logic_vector(unsigned(zext_ln46_2_fu_829_p1) + unsigned(shl_ln421_reg_1376));
    add_ln421_2_fu_944_p2 <= std_logic_vector(unsigned(zext_ln46_3_fu_919_p1) + unsigned(sub_ln421_reg_1420));
    add_ln421_fu_779_p1 <= size;
    add_ln421_fu_779_p2 <= std_logic_vector(unsigned(zext_ln46_1_fu_754_p1) + unsigned(add_ln421_fu_779_p1));
    and_ln420_1_fu_849_p2 <= (icmp_ln420_5_fu_844_p2 and icmp_ln420_2_reg_1371);
    and_ln420_2_fu_939_p2 <= (icmp_ln420_6_fu_934_p2 and icmp_ln420_4_reg_1415);
    and_ln420_fu_774_p2 <= (icmp_ln420_reg_1332 and icmp_ln420_3_fu_769_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(ap_block_state10)
    begin
        if ((ap_const_boolean_1 = ap_block_state10)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state11_blk_assign_proc : process(ap_block_state11)
    begin
        if ((ap_const_boolean_1 = ap_block_state11)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state12_blk_assign_proc : process(ap_block_state12)
    begin
        if ((ap_const_boolean_1 = ap_block_state12)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state13_blk_assign_proc : process(ap_block_state13)
    begin
        if ((ap_const_boolean_1 = ap_block_state13)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state14_blk_assign_proc : process(ap_block_state14)
    begin
        if ((ap_const_boolean_1 = ap_block_state14)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state15_blk_assign_proc : process(ap_block_state15)
    begin
        if ((ap_const_boolean_1 = ap_block_state15)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state16_blk_assign_proc : process(ap_block_state16)
    begin
        if ((ap_const_boolean_1 = ap_block_state16)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state17_blk_assign_proc : process(ap_block_state17_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state17_on_subcall_done)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state18_blk_assign_proc : process(ap_block_state18_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state18_on_subcall_done)) then 
            ap_ST_fsm_state18_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state18_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state20_blk_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_done)
    begin
        if ((grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state20_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state20_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state21_blk <= ap_const_logic_0;

    ap_ST_fsm_state22_blk_assign_proc : process(ap_block_state22_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state22_on_subcall_done)) then 
            ap_ST_fsm_state22_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state22_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state23_blk_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_done)
    begin
        if ((grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state23_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state23_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;

    ap_ST_fsm_state29_blk_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_done)
    begin
        if ((grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state29_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state29_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2)
    begin
        if ((ap_const_boolean_1 = ap_block_state2)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state30_blk_assign_proc : process(ap_block_state30)
    begin
        if ((ap_const_boolean_1 = ap_block_state30)) then 
            ap_ST_fsm_state30_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state30_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state31_blk_assign_proc : process(ap_block_state31)
    begin
        if ((ap_const_boolean_1 = ap_block_state31)) then 
            ap_ST_fsm_state31_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state31_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state32_blk_assign_proc : process(C_mul_stream_full_n)
    begin
        if ((ap_const_logic_0 = C_mul_stream_full_n)) then 
            ap_ST_fsm_state32_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state32_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state33_blk_assign_proc : process(ap_block_state33)
    begin
        if ((ap_const_boolean_1 = ap_block_state33)) then 
            ap_ST_fsm_state33_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state33_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state34_blk_assign_proc : process(ap_block_state34)
    begin
        if ((ap_const_boolean_1 = ap_block_state34)) then 
            ap_ST_fsm_state34_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state34_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state35_blk_assign_proc : process(C_mul_stream_full_n)
    begin
        if ((ap_const_logic_0 = C_mul_stream_full_n)) then 
            ap_ST_fsm_state35_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state35_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state36_blk_assign_proc : process(ap_block_state36)
    begin
        if ((ap_const_boolean_1 = ap_block_state36)) then 
            ap_ST_fsm_state36_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state36_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state37_blk_assign_proc : process(ap_block_state37)
    begin
        if ((ap_const_boolean_1 = ap_block_state37)) then 
            ap_ST_fsm_state37_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state37_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state38_blk_assign_proc : process(C_mul_stream_full_n)
    begin
        if ((ap_const_logic_0 = C_mul_stream_full_n)) then 
            ap_ST_fsm_state38_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state38_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state39_blk_assign_proc : process(ap_block_state39)
    begin
        if ((ap_const_boolean_1 = ap_block_state39)) then 
            ap_ST_fsm_state39_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state39_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3)
    begin
        if ((ap_const_boolean_1 = ap_block_state3)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state40_blk_assign_proc : process(ap_block_state40)
    begin
        if ((ap_const_boolean_1 = ap_block_state40)) then 
            ap_ST_fsm_state40_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state40_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4)
    begin
        if ((ap_const_boolean_1 = ap_block_state4)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(ap_block_state5)
    begin
        if ((ap_const_boolean_1 = ap_block_state5)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(ap_block_state6)
    begin
        if ((ap_const_boolean_1 = ap_block_state6)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(ap_block_state7)
    begin
        if ((ap_const_boolean_1 = ap_block_state7)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(ap_block_state8)
    begin
        if ((ap_const_boolean_1 = ap_block_state8)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state9_blk_assign_proc : process(ap_block_state9)
    begin
        if ((ap_const_boolean_1 = ap_block_state9)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, A_stream_empty_n, B_stream_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_const_logic_0 = B_stream_empty_n) or (ap_const_logic_0 = A_stream_empty_n));
    end process;


    ap_block_state10_assign_proc : process(A_stream_empty_n, B_stream_empty_n)
    begin
                ap_block_state10 <= ((ap_const_logic_0 = B_stream_empty_n) or (ap_const_logic_0 = A_stream_empty_n));
    end process;


    ap_block_state11_assign_proc : process(A_stream_empty_n, B_stream_empty_n)
    begin
                ap_block_state11 <= ((ap_const_logic_0 = B_stream_empty_n) or (ap_const_logic_0 = A_stream_empty_n));
    end process;


    ap_block_state12_assign_proc : process(A_stream_empty_n, B_stream_empty_n)
    begin
                ap_block_state12 <= ((ap_const_logic_0 = B_stream_empty_n) or (ap_const_logic_0 = A_stream_empty_n));
    end process;


    ap_block_state13_assign_proc : process(A_stream_empty_n, B_stream_empty_n)
    begin
                ap_block_state13 <= ((ap_const_logic_0 = B_stream_empty_n) or (ap_const_logic_0 = A_stream_empty_n));
    end process;


    ap_block_state14_assign_proc : process(A_stream_empty_n, B_stream_empty_n)
    begin
                ap_block_state14 <= ((ap_const_logic_0 = B_stream_empty_n) or (ap_const_logic_0 = A_stream_empty_n));
    end process;


    ap_block_state15_assign_proc : process(A_stream_empty_n, B_stream_empty_n)
    begin
                ap_block_state15 <= ((ap_const_logic_0 = B_stream_empty_n) or (ap_const_logic_0 = A_stream_empty_n));
    end process;


    ap_block_state16_assign_proc : process(A_stream_empty_n, B_stream_empty_n)
    begin
                ap_block_state16 <= ((ap_const_logic_0 = B_stream_empty_n) or (ap_const_logic_0 = A_stream_empty_n));
    end process;


    ap_block_state16_ignore_call55_assign_proc : process(A_stream_empty_n, B_stream_empty_n)
    begin
                ap_block_state16_ignore_call55 <= ((ap_const_logic_0 = B_stream_empty_n) or (ap_const_logic_0 = A_stream_empty_n));
    end process;


    ap_block_state16_ignore_call56_assign_proc : process(A_stream_empty_n, B_stream_empty_n)
    begin
                ap_block_state16_ignore_call56 <= ((ap_const_logic_0 = B_stream_empty_n) or (ap_const_logic_0 = A_stream_empty_n));
    end process;


    ap_block_state17_on_subcall_done_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_ap_done, grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_ap_done)
    begin
                ap_block_state17_on_subcall_done <= ((grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_ap_done = ap_const_logic_0) or (grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_ap_done = ap_const_logic_0));
    end process;


    ap_block_state18_on_subcall_done_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_ap_done, grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_ap_done)
    begin
                ap_block_state18_on_subcall_done <= ((grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_ap_done = ap_const_logic_0) or (grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_ap_done = ap_const_logic_0));
    end process;


    ap_block_state2_assign_proc : process(A_stream_empty_n, B_stream_empty_n)
    begin
                ap_block_state2 <= ((ap_const_logic_0 = B_stream_empty_n) or (ap_const_logic_0 = A_stream_empty_n));
    end process;


    ap_block_state22_on_subcall_done_assign_proc : process(icmp_ln111_reg_1170, grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_ap_done)
    begin
                ap_block_state22_on_subcall_done <= ((grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_ap_done = ap_const_logic_0) and (icmp_ln111_reg_1170 = ap_const_lv1_1));
    end process;


    ap_block_state3_assign_proc : process(A_stream_empty_n, B_stream_empty_n)
    begin
                ap_block_state3 <= ((ap_const_logic_0 = B_stream_empty_n) or (ap_const_logic_0 = A_stream_empty_n));
    end process;


    ap_block_state30_assign_proc : process(C_add_stream_full_n, C_sub_stream_full_n, ap_predicate_op188_write_state30, ap_predicate_op189_write_state30)
    begin
                ap_block_state30 <= (((ap_predicate_op189_write_state30 = ap_const_boolean_1) and (ap_const_logic_0 = C_sub_stream_full_n)) or ((ap_predicate_op188_write_state30 = ap_const_boolean_1) and (ap_const_logic_0 = C_add_stream_full_n)));
    end process;


    ap_block_state31_assign_proc : process(C_add_stream_full_n, C_sub_stream_full_n, icmp_ln420_1_reg_1306)
    begin
                ap_block_state31 <= (((ap_const_logic_0 = C_sub_stream_full_n) and (icmp_ln420_1_reg_1306 = ap_const_lv1_1)) or ((ap_const_logic_0 = C_add_stream_full_n) and (icmp_ln420_1_reg_1306 = ap_const_lv1_1)));
    end process;


    ap_block_state33_assign_proc : process(C_add_stream_full_n, C_sub_stream_full_n, ap_predicate_op233_write_state33, ap_predicate_op234_write_state33)
    begin
                ap_block_state33 <= (((ap_predicate_op234_write_state33 = ap_const_boolean_1) and (ap_const_logic_0 = C_sub_stream_full_n)) or ((ap_predicate_op233_write_state33 = ap_const_boolean_1) and (ap_const_logic_0 = C_add_stream_full_n)));
    end process;


    ap_block_state34_assign_proc : process(C_add_stream_full_n, C_sub_stream_full_n, tmp_1_reg_1345)
    begin
                ap_block_state34 <= (((ap_const_logic_0 = C_sub_stream_full_n) and (tmp_1_reg_1345 = ap_const_lv1_0)) or ((ap_const_logic_0 = C_add_stream_full_n) and (tmp_1_reg_1345 = ap_const_lv1_0)));
    end process;


    ap_block_state36_assign_proc : process(C_add_stream_full_n, C_sub_stream_full_n, ap_predicate_op271_write_state36, ap_predicate_op272_write_state36)
    begin
                ap_block_state36 <= (((ap_predicate_op272_write_state36 = ap_const_boolean_1) and (ap_const_logic_0 = C_sub_stream_full_n)) or ((ap_predicate_op271_write_state36 = ap_const_boolean_1) and (ap_const_logic_0 = C_add_stream_full_n)));
    end process;


    ap_block_state37_assign_proc : process(C_add_stream_full_n, C_sub_stream_full_n, tmp_3_reg_1389)
    begin
                ap_block_state37 <= (((ap_const_logic_0 = C_sub_stream_full_n) and (tmp_3_reg_1389 = ap_const_lv1_0)) or ((ap_const_logic_0 = C_add_stream_full_n) and (tmp_3_reg_1389 = ap_const_lv1_0)));
    end process;


    ap_block_state39_assign_proc : process(C_add_stream_full_n, C_sub_stream_full_n, ap_predicate_op311_write_state39, ap_predicate_op312_write_state39)
    begin
                ap_block_state39 <= (((ap_predicate_op312_write_state39 = ap_const_boolean_1) and (ap_const_logic_0 = C_sub_stream_full_n)) or ((ap_predicate_op311_write_state39 = ap_const_boolean_1) and (ap_const_logic_0 = C_add_stream_full_n)));
    end process;


    ap_block_state4_assign_proc : process(A_stream_empty_n, B_stream_empty_n)
    begin
                ap_block_state4 <= ((ap_const_logic_0 = B_stream_empty_n) or (ap_const_logic_0 = A_stream_empty_n));
    end process;


    ap_block_state40_assign_proc : process(C_add_stream_full_n, C_sub_stream_full_n, C_mul_stream_full_n, tmp_4_reg_1433)
    begin
                ap_block_state40 <= ((ap_const_logic_0 = C_mul_stream_full_n) or ((ap_const_logic_0 = C_sub_stream_full_n) and (tmp_4_reg_1433 = ap_const_lv1_0)) or ((ap_const_logic_0 = C_add_stream_full_n) and (tmp_4_reg_1433 = ap_const_lv1_0)));
    end process;


    ap_block_state5_assign_proc : process(A_stream_empty_n, B_stream_empty_n)
    begin
                ap_block_state5 <= ((ap_const_logic_0 = B_stream_empty_n) or (ap_const_logic_0 = A_stream_empty_n));
    end process;


    ap_block_state6_assign_proc : process(A_stream_empty_n, B_stream_empty_n)
    begin
                ap_block_state6 <= ((ap_const_logic_0 = B_stream_empty_n) or (ap_const_logic_0 = A_stream_empty_n));
    end process;


    ap_block_state7_assign_proc : process(A_stream_empty_n, B_stream_empty_n)
    begin
                ap_block_state7 <= ((ap_const_logic_0 = B_stream_empty_n) or (ap_const_logic_0 = A_stream_empty_n));
    end process;


    ap_block_state8_assign_proc : process(A_stream_empty_n, B_stream_empty_n)
    begin
                ap_block_state8 <= ((ap_const_logic_0 = B_stream_empty_n) or (ap_const_logic_0 = A_stream_empty_n));
    end process;


    ap_block_state9_assign_proc : process(A_stream_empty_n, B_stream_empty_n)
    begin
                ap_block_state9 <= ((ap_const_logic_0 = B_stream_empty_n) or (ap_const_logic_0 = A_stream_empty_n));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state39, icmp_ln370_reg_1203, icmp_ln46_3_fu_923_p2, ap_block_state39)
    begin
        if (((ap_const_boolean_0 = ap_block_state39) and (ap_const_logic_1 = ap_CS_fsm_state39) and ((icmp_ln46_3_fu_923_p2 = ap_const_lv1_1) or (icmp_ln370_reg_1203 = ap_const_lv1_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_ref_tmp16_3_phi_fu_397_p4_assign_proc : process(ap_CS_fsm_state40, tmp_4_reg_1433, matC_mul_m_matrix_Data_q0, ref_tmp16_3_reg_393)
    begin
        if (((tmp_4_reg_1433 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            ap_phi_mux_ref_tmp16_3_phi_fu_397_p4 <= matC_mul_m_matrix_Data_q0;
        else 
            ap_phi_mux_ref_tmp16_3_phi_fu_397_p4 <= ref_tmp16_3_reg_393;
        end if; 
    end process;


    ap_predicate_op188_write_state30_assign_proc : process(icmp_ln46_fu_692_p2, icmp_ln420_1_fu_707_p2)
    begin
                ap_predicate_op188_write_state30 <= ((icmp_ln420_1_fu_707_p2 = ap_const_lv1_0) and (icmp_ln46_fu_692_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op189_write_state30_assign_proc : process(icmp_ln46_fu_692_p2, icmp_ln420_1_fu_707_p2)
    begin
                ap_predicate_op189_write_state30 <= ((icmp_ln420_1_fu_707_p2 = ap_const_lv1_0) and (icmp_ln46_fu_692_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op233_write_state33_assign_proc : process(icmp_ln46_1_fu_758_p2, tmp_1_fu_792_p3)
    begin
                ap_predicate_op233_write_state33 <= ((tmp_1_fu_792_p3 = ap_const_lv1_1) and (icmp_ln46_1_fu_758_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op234_write_state33_assign_proc : process(icmp_ln46_1_fu_758_p2, tmp_1_fu_792_p3)
    begin
                ap_predicate_op234_write_state33 <= ((tmp_1_fu_792_p3 = ap_const_lv1_1) and (icmp_ln46_1_fu_758_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op271_write_state36_assign_proc : process(icmp_ln46_2_fu_833_p2, tmp_3_fu_867_p3)
    begin
                ap_predicate_op271_write_state36 <= ((tmp_3_fu_867_p3 = ap_const_lv1_1) and (icmp_ln46_2_fu_833_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op272_write_state36_assign_proc : process(icmp_ln46_2_fu_833_p2, tmp_3_fu_867_p3)
    begin
                ap_predicate_op272_write_state36 <= ((tmp_3_fu_867_p3 = ap_const_lv1_1) and (icmp_ln46_2_fu_833_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op311_write_state39_assign_proc : process(icmp_ln370_reg_1203, icmp_ln46_3_fu_923_p2, tmp_4_fu_957_p3)
    begin
                ap_predicate_op311_write_state39 <= ((tmp_4_fu_957_p3 = ap_const_lv1_1) and (icmp_ln46_3_fu_923_p2 = ap_const_lv1_0) and (icmp_ln370_reg_1203 = ap_const_lv1_1));
    end process;


    ap_predicate_op312_write_state39_assign_proc : process(icmp_ln370_reg_1203, icmp_ln46_3_fu_923_p2, tmp_4_fu_957_p3)
    begin
                ap_predicate_op312_write_state39 <= ((tmp_4_fu_957_p3 = ap_const_lv1_1) and (icmp_ln46_3_fu_923_p2 = ap_const_lv1_0) and (icmp_ln370_reg_1203 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state39, icmp_ln370_reg_1203, icmp_ln46_3_fu_923_p2, ap_block_state39)
    begin
        if (((ap_const_boolean_0 = ap_block_state39) and (ap_const_logic_1 = ap_CS_fsm_state39) and ((icmp_ln46_3_fu_923_p2 = ap_const_lv1_1) or (icmp_ln370_reg_1203 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    elementResult_1_fu_675_p2 <= std_logic_vector(unsigned(mul_ln381_reg_1281) + unsigned(elementResult_reg_333));
    empty_fu_540_p0 <= size;
    empty_fu_540_p1 <= empty_fu_540_p0(4 - 1 downto 0);

    grp_fu_497_p0_assign_proc : process(size, ap_CS_fsm_state15, rhs_m_matrix_Data_load_reg_1276, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_497_p0 <= rhs_m_matrix_Data_load_reg_1276;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_497_p0 <= size;
        else 
            grp_fu_497_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_497_p1_assign_proc : process(size, ap_CS_fsm_state15, lhs_m_matrix_Data_load_reg_1271, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_497_p1 <= lhs_m_matrix_Data_load_reg_1271;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_497_p1 <= size;
        else 
            grp_fu_497_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_ap_start <= grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_ap_start_reg;
    grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_ap_start <= grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_ap_start_reg;
    grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_start <= grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_ap_start_reg;
    grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_start <= grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_ap_start_reg;
    grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_ap_start <= grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_ap_start_reg;
    grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_ap_start <= grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_ap_start_reg;
    grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_start <= grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_ap_start_reg;
    grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_ap_start <= grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_ap_start_reg;
    icmp_ln111_fu_510_p2 <= "1" when (signed(matC_sub_m_nElements_reg_1150) > signed(ap_const_lv32_0)) else "0";
    icmp_ln370_1_fu_551_p2 <= "1" when (indvar_flatten_fu_124 = mul_ln370_reg_1213) else "0";
    icmp_ln370_fu_535_p0 <= size;
    icmp_ln370_fu_535_p2 <= "1" when (signed(icmp_ln370_fu_535_p0) > signed(ap_const_lv32_0)) else "0";
    icmp_ln373_fu_568_p1 <= size;
    icmp_ln373_fu_568_p2 <= "1" when (rhsCol_fu_116 = icmp_ln373_fu_568_p1) else "0";
    icmp_ln377_fu_608_p1 <= size;
    icmp_ln377_fu_608_p2 <= "1" when (lhsCol_reg_322 = icmp_ln377_fu_608_p1) else "0";
    icmp_ln420_1_fu_707_p1 <= size;
    icmp_ln420_1_fu_707_p2 <= "1" when (signed(zext_ln46_fu_688_p1) < signed(icmp_ln420_1_fu_707_p1)) else "0";
    icmp_ln420_2_fu_807_p0 <= size;
    icmp_ln420_2_fu_807_p2 <= "1" when (signed(icmp_ln420_2_fu_807_p0) > signed(ap_const_lv32_2)) else "0";
    icmp_ln420_3_fu_769_p1 <= size;
    icmp_ln420_3_fu_769_p2 <= "1" when (signed(zext_ln46_1_fu_754_p1) < signed(icmp_ln420_3_fu_769_p1)) else "0";
    icmp_ln420_4_fu_891_p2 <= "1" when (signed(tmp_2_fu_882_p4) > signed(ap_const_lv30_0)) else "0";
    icmp_ln420_5_fu_844_p1 <= size;
    icmp_ln420_5_fu_844_p2 <= "1" when (signed(zext_ln46_2_fu_829_p1) < signed(icmp_ln420_5_fu_844_p1)) else "0";
    icmp_ln420_6_fu_934_p1 <= size;
    icmp_ln420_6_fu_934_p2 <= "1" when (signed(zext_ln46_3_fu_919_p1) < signed(icmp_ln420_6_fu_934_p1)) else "0";
    icmp_ln420_fu_736_p2 <= "1" when (signed(tmp_fu_727_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln46_1_fu_758_p1 <= size;
    icmp_ln46_1_fu_758_p2 <= "1" when (zext_ln46_1_fu_754_p1 = icmp_ln46_1_fu_758_p1) else "0";
    icmp_ln46_2_fu_833_p1 <= size;
    icmp_ln46_2_fu_833_p2 <= "1" when (zext_ln46_2_fu_829_p1 = icmp_ln46_2_fu_833_p1) else "0";
    icmp_ln46_3_fu_923_p1 <= size;
    icmp_ln46_3_fu_923_p2 <= "1" when (zext_ln46_3_fu_919_p1 = icmp_ln46_3_fu_923_p1) else "0";
    icmp_ln46_fu_692_p1 <= size;
    icmp_ln46_fu_692_p2 <= "1" when (zext_ln46_fu_688_p1 = icmp_ln46_fu_692_p1) else "0";
    j_10_fu_763_p2 <= std_logic_vector(unsigned(j_1_fu_132) + unsigned(ap_const_lv31_1));
    j_12_fu_838_p2 <= std_logic_vector(unsigned(j_3_fu_136) + unsigned(ap_const_lv31_1));
    j_13_fu_928_p2 <= std_logic_vector(unsigned(j_5_fu_140) + unsigned(ap_const_lv31_1));
    j_8_fu_697_p2 <= std_logic_vector(unsigned(j_fu_128) + unsigned(ap_const_lv31_1));
    linearIndex_1_fu_784_p3 <= 
        add_ln421_fu_779_p2 when (and_ln420_fu_774_p2(0) = '1') else 
        ap_const_lv32_FFFFFFFF;
    linearIndex_2_fu_859_p3 <= 
        add_ln421_1_fu_854_p2 when (and_ln420_1_fu_849_p2(0) = '1') else 
        ap_const_lv32_FFFFFFFF;
    linearIndex_3_fu_949_p3 <= 
        add_ln421_2_fu_944_p2 when (and_ln420_2_fu_939_p2(0) = '1') else 
        ap_const_lv32_FFFFFFFF;
    linearIndex_fu_712_p3 <= 
        trunc_ln46_fu_703_p1 when (icmp_ln420_1_fu_707_p2(0) = '1') else 
        ap_const_lv4_F;

    matA_m_matrix_Data_address0_assign_proc : process(icmp_ln111_reg_1170, ap_CS_fsm_state17, ap_CS_fsm_state25, grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_matA_m_matrix_Data_address0, grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matA_m_matrix_Data_address0, grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_matA_m_matrix_Data_address0, ap_CS_fsm_state20, ap_CS_fsm_state22, zext_ln380_fu_628_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            matA_m_matrix_Data_address0 <= zext_ln380_fu_628_p1(4 - 1 downto 0);
        elsif (((icmp_ln111_reg_1170 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            matA_m_matrix_Data_address0 <= grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_matA_m_matrix_Data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            matA_m_matrix_Data_address0 <= grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matA_m_matrix_Data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            matA_m_matrix_Data_address0 <= grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_matA_m_matrix_Data_address0;
        else 
            matA_m_matrix_Data_address0 <= "XXXX";
        end if; 
    end process;


    matA_m_matrix_Data_ce0_assign_proc : process(icmp_ln111_reg_1170, ap_CS_fsm_state17, ap_CS_fsm_state25, grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_matA_m_matrix_Data_ce0, grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matA_m_matrix_Data_ce0, grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_matA_m_matrix_Data_ce0, ap_CS_fsm_state20, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            matA_m_matrix_Data_ce0 <= ap_const_logic_1;
        elsif (((icmp_ln111_reg_1170 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            matA_m_matrix_Data_ce0 <= grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_matA_m_matrix_Data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            matA_m_matrix_Data_ce0 <= grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matA_m_matrix_Data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            matA_m_matrix_Data_ce0 <= grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_matA_m_matrix_Data_ce0;
        else 
            matA_m_matrix_Data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matA_m_matrix_Data_we0_assign_proc : process(ap_CS_fsm_state17, grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_matA_m_matrix_Data_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            matA_m_matrix_Data_we0 <= grp_top_Pipeline_VITIS_LOOP_111_1_fu_406_matA_m_matrix_Data_we0;
        else 
            matA_m_matrix_Data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    matB_m_matrix_Data_address0_assign_proc : process(icmp_ln111_reg_1170, ap_CS_fsm_state17, ap_CS_fsm_state25, grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_matB_m_matrix_Data_address0, grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matB_m_matrix_Data_address0, grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_matB_m_matrix_Data_address0, ap_CS_fsm_state20, ap_CS_fsm_state22, zext_ln381_fu_643_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            matB_m_matrix_Data_address0 <= zext_ln381_fu_643_p1(4 - 1 downto 0);
        elsif (((icmp_ln111_reg_1170 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            matB_m_matrix_Data_address0 <= grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_matB_m_matrix_Data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            matB_m_matrix_Data_address0 <= grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matB_m_matrix_Data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            matB_m_matrix_Data_address0 <= grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_matB_m_matrix_Data_address0;
        else 
            matB_m_matrix_Data_address0 <= "XXXX";
        end if; 
    end process;


    matB_m_matrix_Data_ce0_assign_proc : process(icmp_ln111_reg_1170, ap_CS_fsm_state17, ap_CS_fsm_state25, grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_matB_m_matrix_Data_ce0, grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matB_m_matrix_Data_ce0, grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_matB_m_matrix_Data_ce0, ap_CS_fsm_state20, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            matB_m_matrix_Data_ce0 <= ap_const_logic_1;
        elsif (((icmp_ln111_reg_1170 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            matB_m_matrix_Data_ce0 <= grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_matB_m_matrix_Data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            matB_m_matrix_Data_ce0 <= grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matB_m_matrix_Data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            matB_m_matrix_Data_ce0 <= grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_matB_m_matrix_Data_ce0;
        else 
            matB_m_matrix_Data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matB_m_matrix_Data_we0_assign_proc : process(ap_CS_fsm_state17, grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_matB_m_matrix_Data_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            matB_m_matrix_Data_we0 <= grp_top_Pipeline_VITIS_LOOP_111_11_fu_429_matB_m_matrix_Data_we0;
        else 
            matB_m_matrix_Data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    matC_add_m_matrix_Data_address0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state33, ap_CS_fsm_state36, ap_CS_fsm_state39, grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_matC_add_m_matrix_Data_address0, grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matC_add_m_matrix_Data_address0, ap_CS_fsm_state18, ap_CS_fsm_state20, zext_ln189_fu_720_p1, zext_ln189_1_fu_800_p1, zext_ln189_2_fu_875_p1, zext_ln189_3_fu_965_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            matC_add_m_matrix_Data_address0 <= zext_ln189_3_fu_965_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            matC_add_m_matrix_Data_address0 <= zext_ln189_2_fu_875_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            matC_add_m_matrix_Data_address0 <= zext_ln189_1_fu_800_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            matC_add_m_matrix_Data_address0 <= zext_ln189_fu_720_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            matC_add_m_matrix_Data_address0 <= grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matC_add_m_matrix_Data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            matC_add_m_matrix_Data_address0 <= grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_matC_add_m_matrix_Data_address0;
        else 
            matC_add_m_matrix_Data_address0 <= "XXXX";
        end if; 
    end process;


    matC_add_m_matrix_Data_ce0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state33, ap_CS_fsm_state36, ap_CS_fsm_state39, grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_matC_add_m_matrix_Data_ce0, grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matC_add_m_matrix_Data_ce0, ap_block_state30, ap_block_state33, ap_block_state36, ap_block_state39, ap_CS_fsm_state18, ap_CS_fsm_state20)
    begin
        if ((((ap_const_boolean_0 = ap_block_state39) and (ap_const_logic_1 = ap_CS_fsm_state39)) or ((ap_const_boolean_0 = ap_block_state36) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_const_boolean_0 = ap_block_state33) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((ap_const_boolean_0 = ap_block_state30) and (ap_const_logic_1 = ap_CS_fsm_state30)))) then 
            matC_add_m_matrix_Data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            matC_add_m_matrix_Data_ce0 <= grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matC_add_m_matrix_Data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            matC_add_m_matrix_Data_ce0 <= grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_matC_add_m_matrix_Data_ce0;
        else 
            matC_add_m_matrix_Data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matC_add_m_matrix_Data_d0_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_matC_add_m_matrix_Data_d0, grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matC_add_m_matrix_Data_d0, ap_CS_fsm_state18, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            matC_add_m_matrix_Data_d0 <= grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matC_add_m_matrix_Data_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            matC_add_m_matrix_Data_d0 <= grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_matC_add_m_matrix_Data_d0;
        else 
            matC_add_m_matrix_Data_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    matC_add_m_matrix_Data_we0_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_matC_add_m_matrix_Data_we0, grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matC_add_m_matrix_Data_we0, ap_CS_fsm_state18, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            matC_add_m_matrix_Data_we0 <= grp_top_Pipeline_VITIS_LOOP_233_1_fu_464_matC_add_m_matrix_Data_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            matC_add_m_matrix_Data_we0 <= grp_top_Pipeline_VITIS_LOOP_93_1_fu_452_matC_add_m_matrix_Data_we0;
        else 
            matC_add_m_matrix_Data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    matC_mul_m_matrix_Data_address0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state33, ap_CS_fsm_state36, ap_CS_fsm_state39, grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_matC_mul_m_matrix_Data_address0, ap_CS_fsm_state29, zext_ln189_fu_720_p1, zext_ln189_1_fu_800_p1, zext_ln189_2_fu_875_p1, zext_ln189_3_fu_965_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            matC_mul_m_matrix_Data_address0 <= zext_ln189_3_fu_965_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            matC_mul_m_matrix_Data_address0 <= zext_ln189_2_fu_875_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            matC_mul_m_matrix_Data_address0 <= zext_ln189_1_fu_800_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            matC_mul_m_matrix_Data_address0 <= zext_ln189_fu_720_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            matC_mul_m_matrix_Data_address0 <= grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_matC_mul_m_matrix_Data_address0;
        else 
            matC_mul_m_matrix_Data_address0 <= "XXXX";
        end if; 
    end process;


    matC_mul_m_matrix_Data_ce0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state33, ap_CS_fsm_state36, ap_CS_fsm_state39, grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_matC_mul_m_matrix_Data_ce0, ap_block_state30, ap_block_state33, ap_block_state36, ap_block_state39, ap_CS_fsm_state29)
    begin
        if ((((ap_const_boolean_0 = ap_block_state39) and (ap_const_logic_1 = ap_CS_fsm_state39)) or ((ap_const_boolean_0 = ap_block_state36) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_const_boolean_0 = ap_block_state33) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((ap_const_boolean_0 = ap_block_state30) and (ap_const_logic_1 = ap_CS_fsm_state30)))) then 
            matC_mul_m_matrix_Data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            matC_mul_m_matrix_Data_ce0 <= grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_matC_mul_m_matrix_Data_ce0;
        else 
            matC_mul_m_matrix_Data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matC_mul_m_matrix_Data_we0_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_matC_mul_m_matrix_Data_we0, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            matC_mul_m_matrix_Data_we0 <= grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_matC_mul_m_matrix_Data_we0;
        else 
            matC_mul_m_matrix_Data_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln370_1_fu_599_p0 <= select_ln370_1_fu_587_p3(4 - 1 downto 0);
    mul_ln370_fu_493_p0 <= zext_ln370_fu_543_p1(32 - 1 downto 0);
    mul_ln370_fu_493_p1 <= zext_ln370_fu_543_p1(32 - 1 downto 0);

    result_m_matrix_Data_3_address0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state33, ap_CS_fsm_state36, ap_CS_fsm_state39, icmp_ln111_reg_1170, grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_result_m_matrix_Data_3_address0, grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_result_m_matrix_Data_3_address0, ap_CS_fsm_state18, ap_CS_fsm_state22, zext_ln189_fu_720_p1, zext_ln189_1_fu_800_p1, zext_ln189_2_fu_875_p1, zext_ln189_3_fu_965_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            result_m_matrix_Data_3_address0 <= zext_ln189_3_fu_965_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            result_m_matrix_Data_3_address0 <= zext_ln189_2_fu_875_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            result_m_matrix_Data_3_address0 <= zext_ln189_1_fu_800_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            result_m_matrix_Data_3_address0 <= zext_ln189_fu_720_p1(4 - 1 downto 0);
        elsif (((icmp_ln111_reg_1170 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            result_m_matrix_Data_3_address0 <= grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_result_m_matrix_Data_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            result_m_matrix_Data_3_address0 <= grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_result_m_matrix_Data_3_address0;
        else 
            result_m_matrix_Data_3_address0 <= "XXXX";
        end if; 
    end process;


    result_m_matrix_Data_3_ce0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state33, ap_CS_fsm_state36, ap_CS_fsm_state39, icmp_ln111_reg_1170, grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_result_m_matrix_Data_3_ce0, grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_result_m_matrix_Data_3_ce0, ap_block_state30, ap_block_state33, ap_block_state36, ap_block_state39, ap_CS_fsm_state18, ap_CS_fsm_state22)
    begin
        if ((((ap_const_boolean_0 = ap_block_state39) and (ap_const_logic_1 = ap_CS_fsm_state39)) or ((ap_const_boolean_0 = ap_block_state36) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_const_boolean_0 = ap_block_state33) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((ap_const_boolean_0 = ap_block_state30) and (ap_const_logic_1 = ap_CS_fsm_state30)))) then 
            result_m_matrix_Data_3_ce0 <= ap_const_logic_1;
        elsif (((icmp_ln111_reg_1170 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            result_m_matrix_Data_3_ce0 <= grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_result_m_matrix_Data_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            result_m_matrix_Data_3_ce0 <= grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_result_m_matrix_Data_3_ce0;
        else 
            result_m_matrix_Data_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_m_matrix_Data_3_d0_assign_proc : process(icmp_ln111_reg_1170, grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_result_m_matrix_Data_3_d0, grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_result_m_matrix_Data_3_d0, ap_CS_fsm_state18, ap_CS_fsm_state22)
    begin
        if (((icmp_ln111_reg_1170 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            result_m_matrix_Data_3_d0 <= grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_result_m_matrix_Data_3_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            result_m_matrix_Data_3_d0 <= grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_result_m_matrix_Data_3_d0;
        else 
            result_m_matrix_Data_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    result_m_matrix_Data_3_we0_assign_proc : process(icmp_ln111_reg_1170, grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_result_m_matrix_Data_3_we0, grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_result_m_matrix_Data_3_we0, ap_CS_fsm_state18, ap_CS_fsm_state22)
    begin
        if (((icmp_ln111_reg_1170 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            result_m_matrix_Data_3_we0 <= grp_top_Pipeline_VITIS_LOOP_280_1_fu_472_result_m_matrix_Data_3_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            result_m_matrix_Data_3_we0 <= grp_top_Pipeline_VITIS_LOOP_93_12_fu_458_result_m_matrix_Data_3_we0;
        else 
            result_m_matrix_Data_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    result_m_matrix_Data_address0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state25, grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_result_m_matrix_Data_address0, grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_result_m_matrix_Data_address0, ap_CS_fsm_state29, zext_ln384_fu_652_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            result_m_matrix_Data_address0 <= zext_ln384_fu_652_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            result_m_matrix_Data_address0 <= grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_result_m_matrix_Data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            result_m_matrix_Data_address0 <= grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_result_m_matrix_Data_address0;
        else 
            result_m_matrix_Data_address0 <= "XXXX";
        end if; 
    end process;


    result_m_matrix_Data_ce0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state25, grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_result_m_matrix_Data_ce0, grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_result_m_matrix_Data_ce0, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            result_m_matrix_Data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            result_m_matrix_Data_ce0 <= grp_top_Pipeline_VITIS_LOOP_129_1_fu_486_result_m_matrix_Data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            result_m_matrix_Data_ce0 <= grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_result_m_matrix_Data_ce0;
        else 
            result_m_matrix_Data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_m_matrix_Data_d0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state25, grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_result_m_matrix_Data_d0, elementResult_reg_333)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            result_m_matrix_Data_d0 <= elementResult_reg_333;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            result_m_matrix_Data_d0 <= grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_result_m_matrix_Data_d0;
        else 
            result_m_matrix_Data_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    result_m_matrix_Data_we0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state25, grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_result_m_matrix_Data_we0, icmp_ln377_fu_608_p2)
    begin
        if (((icmp_ln377_fu_608_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            result_m_matrix_Data_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            result_m_matrix_Data_we0 <= grp_top_Pipeline_VITIS_LOOP_93_13_fu_480_result_m_matrix_Data_we0;
        else 
            result_m_matrix_Data_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln370_1_fu_587_p3 <= 
        add_ln370_1_fu_581_p2 when (icmp_ln373_fu_568_p2(0) = '1') else 
        lhsRow_fu_120;
    select_ln370_fu_573_p3 <= 
        ap_const_lv32_0 when (icmp_ln373_fu_568_p2(0) = '1') else 
        rhsCol_fu_116;
    shl_ln421_1_fu_897_p0 <= size;
    shl_ln421_1_fu_897_p2 <= std_logic_vector(shift_left(unsigned(shl_ln421_1_fu_897_p0),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    shl_ln421_fu_812_p0 <= size;
    shl_ln421_fu_812_p2 <= std_logic_vector(shift_left(unsigned(shl_ln421_fu_812_p0),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    sub_ln421_fu_902_p1 <= size;
    sub_ln421_fu_902_p2 <= std_logic_vector(unsigned(shl_ln421_1_fu_897_p2) - unsigned(sub_ln421_fu_902_p1));
    tmp_1_fu_792_p3 <= linearIndex_1_fu_784_p3(31 downto 31);
    tmp_2_fu_882_p1 <= size;
    tmp_2_fu_882_p4 <= tmp_2_fu_882_p1(31 downto 2);
    tmp_3_fu_867_p3 <= linearIndex_2_fu_859_p3(31 downto 31);
    tmp_4_fu_957_p3 <= linearIndex_3_fu_949_p3(31 downto 31);
    tmp_fu_727_p1 <= size;
    tmp_fu_727_p4 <= tmp_fu_727_p1(31 downto 1);
    trunc_ln373_fu_604_p1 <= select_ln370_fu_573_p3(4 - 1 downto 0);
    trunc_ln377_fu_619_p1 <= lhsCol_reg_322(4 - 1 downto 0);
    trunc_ln46_fu_703_p1 <= j_fu_128(4 - 1 downto 0);
    trunc_ln93_fu_515_p1 <= matC_sub_m_nElements_reg_1150(5 - 1 downto 0);
    zext_ln189_1_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(linearIndex_1_fu_784_p3),64));
    zext_ln189_2_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(linearIndex_2_fu_859_p3),64));
    zext_ln189_3_fu_965_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(linearIndex_3_fu_949_p3),64));
    zext_ln189_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(linearIndex_fu_712_p3),64));
    zext_ln370_fu_543_p0 <= size;
    zext_ln370_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln370_fu_543_p0),64));
    zext_ln380_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln379_fu_623_p2),64));
    zext_ln381_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln380_fu_638_p2),64));
    zext_ln384_fu_652_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln383_fu_648_p2),64));
    zext_ln46_1_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_fu_132),32));
    zext_ln46_2_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_3_fu_136),32));
    zext_ln46_3_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_5_fu_140),32));
    zext_ln46_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_fu_128),32));
end behav;
